{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgDelegate = void 0;\n\nvar Coin_1 = require(\"../../Coin\");\n\nvar json_1 = require(\"../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/cosmos/staking/v1beta1/tx\");\n/**\n * A delegator can submit this message to send more Luna to be staked through a\n * validator delegate.\n */\n\n\nvar MsgDelegate =\n/** @class */\nfunction (_super) {\n  __extends(MsgDelegate, _super);\n  /**\n   *\n   * @param delegator_address delegator's account address\n   * @param validator_address validator's operator address\n   * @param amount amount of LUNA to be sent for delegation\n   */\n\n\n  function MsgDelegate(delegator_address, validator_address, amount) {\n    var _this = _super.call(this) || this;\n\n    _this.delegator_address = delegator_address;\n    _this.validator_address = validator_address;\n    _this.amount = amount;\n    return _this;\n  }\n\n  MsgDelegate.fromAmino = function (data) {\n    var _a = data.value,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        amount = _a.amount;\n    return new MsgDelegate(delegator_address, validator_address, Coin_1.Coin.fromAmino(amount));\n  };\n\n  MsgDelegate.prototype.toAmino = function () {\n    var _a = this,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        amount = _a.amount;\n\n    return {\n      type: 'staking/MsgDelegate',\n      value: {\n        delegator_address: delegator_address,\n        validator_address: validator_address,\n        amount: amount.toAmino()\n      }\n    };\n  };\n\n  MsgDelegate.fromProto = function (proto) {\n    return new MsgDelegate(proto.delegatorAddress, proto.validatorAddress, Coin_1.Coin.fromProto(proto.amount));\n  };\n\n  MsgDelegate.prototype.toProto = function () {\n    var _a = this,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        amount = _a.amount;\n\n    return tx_1.MsgDelegate.fromPartial({\n      amount: amount.toProto(),\n      delegatorAddress: delegator_address,\n      validatorAddress: validator_address\n    });\n  };\n\n  MsgDelegate.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.staking.v1beta1.MsgDelegate',\n      value: tx_1.MsgDelegate.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgDelegate.unpackAny = function (msgAny) {\n    return MsgDelegate.fromProto(tx_1.MsgDelegate.decode(msgAny.value));\n  };\n\n  MsgDelegate.fromData = function (data) {\n    var delegator_address = data.delegator_address,\n        validator_address = data.validator_address,\n        amount = data.amount;\n    return new MsgDelegate(delegator_address, validator_address, Coin_1.Coin.fromData(amount));\n  };\n\n  MsgDelegate.prototype.toData = function () {\n    var _a = this,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        amount = _a.amount;\n\n    return {\n      '@type': '/cosmos.staking.v1beta1.MsgDelegate',\n      delegator_address: delegator_address,\n      validator_address: validator_address,\n      amount: amount.toData()\n    };\n  };\n\n  return MsgDelegate;\n}(json_1.JSONSerializable);\n\nexports.MsgDelegate = MsgDelegate;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;AAEA;;;;;;AAIA;AAAA;AAAA;EAAiCA;EAK/B;;;;;;;;EAMA,qBACSC,iBADT,EAESC,iBAFT,EAGSC,MAHT,EAGqB;IAHrB,YAKEC,qBAAO,IALT;;IACSC;IACAA;IACAA;;EAGR;;EAEaC,wBAAd,UAAwBC,IAAxB,EAA+C;IAE3C,SACEA,IAAI,MADN;IAAA,IAASN,iBAAiB,uBAA1B;IAAA,IAA4BC,iBAAiB,uBAA7C;IAAA,IAA+CC,MAAM,YAArD;IAEF,OAAO,IAAIG,WAAJ,CACLL,iBADK,EAELC,iBAFK,EAGLM,YAAKC,SAAL,CAAeN,MAAf,CAHK,CAAP;EAKD,CATa;;EAWPG,gCAAP;IACQ,SAAmD,IAAnD;IAAA,IAAEL,iBAAiB,uBAAnB;IAAA,IAAqBC,iBAAiB,uBAAtC;IAAA,IAAwCC,MAAM,YAA9C;;IACN,OAAO;MACLO,IAAI,EAAE,qBADD;MAELC,KAAK,EAAE;QACLV,iBAAiB,mBADZ;QAELC,iBAAiB,mBAFZ;QAGLC,MAAM,EAAEA,MAAM,CAACS,OAAP;MAHH;IAFF,CAAP;EAQD,CAVM;;EAYON,wBAAd,UAAwBO,KAAxB,EAAgD;IAC9C,OAAO,IAAIP,WAAJ,CACLO,KAAK,CAACC,gBADD,EAELD,KAAK,CAACE,gBAFD,EAGLP,YAAKQ,SAAL,CAAeH,KAAK,CAACV,MAArB,CAHK,CAAP;EAKD,CANa;;EAQPG,gCAAP;IACQ,SAAmD,IAAnD;IAAA,IAAEL,iBAAiB,uBAAnB;IAAA,IAAqBC,iBAAiB,uBAAtC;IAAA,IAAwCC,MAAM,YAA9C;;IACN,OAAOc,iBAAeC,WAAf,CAA2B;MAChCf,MAAM,EAAEA,MAAM,CAACgB,OAAP,EADwB;MAEhCL,gBAAgB,EAAEb,iBAFc;MAGhCc,gBAAgB,EAAEb;IAHc,CAA3B,CAAP;EAKD,CAPM;;EASAI,gCAAP;IACE,OAAOc,UAAIF,WAAJ,CAAgB;MACrBG,OAAO,EAAE,qCADY;MAErBV,KAAK,EAAEM,iBAAeK,MAAf,CAAsB,KAAKH,OAAL,EAAtB,EAAsCI,MAAtC;IAFc,CAAhB,CAAP;EAID,CALM;;EAOOjB,wBAAd,UAAwBkB,MAAxB,EAAmC;IACjC,OAAOlB,WAAW,CAACU,SAAZ,CAAsBC,iBAAeQ,MAAf,CAAsBD,MAAM,CAACb,KAA7B,CAAtB,CAAP;EACD,CAFa;;EAIAL,uBAAd,UAAuBC,IAAvB,EAA6C;IACnC,qBAAiB,GAAgCA,IAAI,kBAArD;IAAA,IAAmBL,iBAAiB,GAAaK,IAAI,kBAArD;IAAA,IAAsCJ,MAAM,GAAKI,IAAI,OAArD;IACR,OAAO,IAAID,WAAJ,CACLL,iBADK,EAELC,iBAFK,EAGLM,YAAKkB,QAAL,CAAcvB,MAAd,CAHK,CAAP;EAKD,CAPa;;EASPG,+BAAP;IACQ,SAAmD,IAAnD;IAAA,IAAEL,iBAAiB,uBAAnB;IAAA,IAAqBC,iBAAiB,uBAAtC;IAAA,IAAwCC,MAAM,YAA9C;;IACN,OAAO;MACL,SAAS,qCADJ;MAELF,iBAAiB,mBAFZ;MAGLC,iBAAiB,mBAHZ;MAILC,MAAM,EAAEA,MAAM,CAACwB,MAAP;IAJH,CAAP;EAMD,CARM;;EAST;AAAC,CAxFD,CAAiCC,uBAAjC;;AAAaC","names":["__extends","delegator_address","validator_address","amount","_super","_this","MsgDelegate","data","Coin_1","fromAmino","type","value","toAmino","proto","delegatorAddress","validatorAddress","fromProto","tx_1","fromPartial","toProto","any_1","typeUrl","encode","finish","msgAny","decode","fromData","toData","json_1","exports"],"sources":["../../../../src/core/staking/msgs/MsgDelegate.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}