{"ast":null,"code":"var _jsxFileName = \"/Users/vijithreddybheemireddi/Documents/wallet/wallet-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState('');\n  const [walletScan, setWalletScan] = useState({\n    network: \"\",\n    balance: \"\"\n  });\n  const [table_data, setTableData] = useState([]);\n  ;\n\n  function toFixedValue(value, dp) {\n    return +parseFloat(value).toFixed(dp);\n  }\n\n  async function scanWallet() {\n    const endpoint = {\n      url: process.env.REACT_APP_NODE_ENDPOINT,\n      user: process.env.REACT_APP_NODE_USERNAME,\n      password: process.env.REACT_APP_NODE_PASSWORD\n    };\n\n    if (ethers.utils.isAddress(walletAddress)) {\n      const provider = new ethers.providers.JsonRpcProvider(endpoint, 'homestead');\n      const network_obj = await provider.getNetwork();\n      const network = network_obj.name;\n      const preformat_balance = ethers.utils.formatEther(await provider.getBalance(walletAddress));\n      const balance = toFixedValue(preformat_balance, 4);\n      setWalletScan({\n        network,\n        balance\n      });\n      console.log(\"network\", walletScan.network);\n      const body = JSON.stringify({\n        \"method\": \"coinbaseCloud_getBalances\",\n        \"params\": {\n          \"addressAndContractList\": [{\n            \"address\": walletAddress,\n            \"contract\": \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n          }, {\n            \"address\": walletAddress,\n            \"contract\": \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\"\n          }],\n          \"blockchain\": \"Ethereum\",\n          \"network\": \"Mainnet\"\n        },\n        \"id\": 1,\n        \"jsonrpc\": \"2.0\"\n      });\n      console.log(body);\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: body\n      };\n      fetch('https://mainnet.ethereum.coinbasecloud.net', requestOptions).then(response => console.log(\"response\", response.json()));\n      const table_data = [{\n        token_name: \"Ethereum\",\n        balance: balance\n      }, {\n        token_name: \"APECoin\",\n        balance: 1.2343\n      }, {\n        token_name: \"Wrapped Ether\",\n        balance: 12\n      }, {\n        token_name: \"USDC\",\n        balance: 10000\n      }];\n      setTableData(table_data);\n    } else {\n      alert(\"Please enter the correct eth address\");\n    }\n  }\n\n  const setWalletAddr = event => {\n    setWalletAddress(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault(); // 👇️ value of input field\n\n    scanWallet();\n    console.log(\"table data is\", typeof table_data);\n    console.log('WalletAddress ', walletAddress);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Wallet Address Entered: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Balance: \", walletScan.balance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Network Name: \", walletScan.network]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-style-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wallet Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"walletAddress\",\n            type: \"text\",\n            name: \"walletAddress\",\n            value: walletAddress,\n            onChange: setWalletAddr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Balances: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"styled-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Token Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: table_data.map((value, key) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.token_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7qtxMz9TSkLcJ5KkQOip97OJTvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","ethers","App","walletAddress","setWalletAddress","walletScan","setWalletScan","network","balance","table_data","setTableData","toFixedValue","value","dp","parseFloat","toFixed","scanWallet","endpoint","url","process","env","REACT_APP_NODE_ENDPOINT","user","REACT_APP_NODE_USERNAME","password","REACT_APP_NODE_PASSWORD","utils","isAddress","provider","providers","JsonRpcProvider","network_obj","getNetwork","name","preformat_balance","formatEther","getBalance","console","log","body","JSON","stringify","requestOptions","method","headers","fetch","then","response","json","token_name","alert","setWalletAddr","event","target","handleSubmit","preventDefault","map","key"],"sources":["/Users/vijithreddybheemireddi/Documents/wallet/wallet-demo/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './App.css';\n\n\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState('');\n  const [walletScan, setWalletScan] = useState({\n    network: \"\",\n    balance: \"\"\n  });\n\n  const [table_data, setTableData]=useState([]);;\n\n  function toFixedValue( value, dp ){\n    return +parseFloat(value).toFixed( dp );\n  }\n  async function scanWallet() {\n    const endpoint = {\n      url: process.env.REACT_APP_NODE_ENDPOINT,\n      user: process.env.REACT_APP_NODE_USERNAME,\n      password: process.env.REACT_APP_NODE_PASSWORD,\n    }\n    if (ethers.utils.isAddress(walletAddress)) {\n      const provider = new ethers.providers.JsonRpcProvider(endpoint, 'homestead');\n      const network_obj=await provider.getNetwork();\n\n      const network=network_obj.name;\n      const preformat_balance = ethers.utils.formatEther(await provider.getBalance(walletAddress));\n      const balance=toFixedValue(preformat_balance,4)\n      setWalletScan({\n        network,\n        balance\n      });\n      \n      console.log(\"network\", walletScan.network)\n      const body=JSON.stringify({\n        \"method\": \"coinbaseCloud_getBalances\",\n        \"params\": {\n            \"addressAndContractList\": [\n                {\n                    \"address\": walletAddress,\n                    \"contract\": \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n                },\n                {\n                    \"address\": walletAddress,\n                    \"contract\": \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\"\n                }\n            ],\n            \"blockchain\": \"Ethereum\",\n            \"network\": \"Mainnet\"\n        },\n        \"id\": 1,\n        \"jsonrpc\": \"2.0\"\n    });\n    console.log(body)\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: body\n  };\n  fetch('https://mainnet.ethereum.coinbasecloud.net', requestOptions)\n        .then(response => console.log(\"response\",response.json()));\n      \n      const table_data = [\n        { token_name: \"Ethereum\", balance: balance},\n        { token_name: \"APECoin\", balance: 1.2343},\n        { token_name: \"Wrapped Ether\", balance: 12},\n        { token_name: \"USDC\", balance: 10000}\n      ]\n      setTableData(table_data);\n      \n    } else {\n      alert(\"Please enter the correct eth address\");\n    }\n\n\n\n  }\n\n  const setWalletAddr = event => {\n    setWalletAddress(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // 👇️ value of input field\n    scanWallet();\n    console.log(\"table data is\", typeof(table_data));\n    console.log('WalletAddress ', walletAddress);\n\n  };\n\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Wallet Address Entered: {walletAddress}</h3>\n        <h3>Balance: {walletScan.balance} ETH</h3>\n        <h3>Network Name: {walletScan.network}</h3>\n        <div className=\"form-style-6\">\n          <h1>Wallet Scanner</h1>\n          <form onSubmit={handleSubmit}>\n            <input id=\"walletAddress\" type=\"text\" name=\"walletAddress\" value={walletAddress} onChange={setWalletAddr} />\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n        </div>\n        <h3> Balances: </h3>\n        <table className=\"styled-table\">\n        <thead>\n          <tr>\n            <th>Token Name</th>\n            <th>Balance</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            table_data.map((value, key) => {\n              return (\n                <tr key={key}>\n                  <td>{value.token_name}</td>\n                  <td>{value.balance}</td>\n                </tr>\n              )\n            })\n          }\n        </tbody>\n      </table>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}