{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getContractEvents = exports.getContractAddress = exports.getCodeId = void 0;\n\nvar TxAPI_1 = require(\"../client/lcd/api/TxAPI\");\n\nfunction getCodeId(txResult, msgIndex) {\n  if (msgIndex === void 0) {\n    msgIndex = 0;\n  }\n\n  if ((0, TxAPI_1.isTxError)(txResult) || txResult.logs === undefined || txResult.logs.length === 0) {\n    throw new Error('could not parse code id -- tx logs are empty.');\n  }\n\n  var codeId = txResult.logs[msgIndex].eventsByType['store_code']['code_id'][0];\n  return codeId;\n}\n\nexports.getCodeId = getCodeId;\n\nfunction getContractAddress(txResult, msgIndex) {\n  if (msgIndex === void 0) {\n    msgIndex = 0;\n  }\n\n  if ((0, TxAPI_1.isTxError)(txResult) || txResult.logs === undefined || txResult.logs.length === 0) {\n    throw new Error('could not parse contract address -- tx logs are empty.');\n  }\n\n  var contractAddress = txResult.logs[msgIndex].eventsByType['instantiate_contract']['contract_address'][0];\n  return contractAddress;\n}\n\nexports.getContractAddress = getContractAddress;\n\nfunction getContractEvents(txResult, msgIndex) {\n  if (msgIndex === void 0) {\n    msgIndex = 0;\n  }\n\n  if ((0, TxAPI_1.isTxError)(txResult) || txResult.logs === undefined || txResult.logs.length === 0) {\n    throw new Error('could not parse contract events -- tx logs are empty.');\n  }\n\n  var contractEvents = [];\n\n  for (var _i = 0, _a = txResult.logs[msgIndex].events; _i < _a.length; _i++) {\n    var event_1 = _a[_i];\n\n    if (event_1.type === 'from_contract') {\n      var eventData = {\n        contract_address: ''\n      }; // will be overwritten\n\n      var currentContractAddress = event_1.attributes[0].value;\n\n      for (var _b = 0, _c = event_1.attributes; _b < _c.length; _b++) {\n        var att = _c[_b];\n\n        if (att.key == 'contract_address' && currentContractAddress !== att.value) {\n          contractEvents.push(eventData);\n          eventData = {\n            contract_address: ''\n          };\n          currentContractAddress = att.value;\n        }\n\n        eventData[att.key] = att.value;\n      }\n\n      contractEvents.push(eventData);\n      return contractEvents;\n    }\n  }\n\n  throw new Error(\"could not find event type 'from_contract' in logs\");\n}\n\nexports.getContractEvents = getContractEvents;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAGA,SAAgBA,SAAhB,CACEC,QADF,EAEEC,QAFF,EAEc;EAAZ;IAAAA;EAAY;;EAEZ,IACE,uBAAUD,QAAV,KACAA,QAAQ,CAACE,IAAT,KAAkBC,SADlB,IAEAH,QAAQ,CAACE,IAAT,CAAcE,MAAd,KAAyB,CAH3B,EAIE;IACA,MAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;EACD;;EACD,IAAMC,MAAM,GACVN,QAAQ,CAACE,IAAT,CAAcD,QAAd,EAAwBM,YAAxB,CAAqC,YAArC,EAAmD,SAAnD,EAA8D,CAA9D,CADF;EAEA,OAAOD,MAAP;AACD;;AAdDE;;AAgBA,SAAgBC,kBAAhB,CACET,QADF,EAEEC,QAFF,EAEc;EAAZ;IAAAA;EAAY;;EAEZ,IACE,uBAAUD,QAAV,KACAA,QAAQ,CAACE,IAAT,KAAkBC,SADlB,IAEAH,QAAQ,CAACE,IAAT,CAAcE,MAAd,KAAyB,CAH3B,EAIE;IACA,MAAM,IAAIC,KAAJ,CAAU,wDAAV,CAAN;EACD;;EACD,IAAMK,eAAe,GACnBV,QAAQ,CAACE,IAAT,CAAcD,QAAd,EAAwBM,YAAxB,CAAqC,sBAArC,EACE,kBADF,EAEE,CAFF,CADF;EAIA,OAAOG,eAAP;AACD;;AAhBDF;;AAuBA,SAAgBG,iBAAhB,CACEX,QADF,EAEEC,QAFF,EAEc;EAAZ;IAAAA;EAAY;;EAEZ,IACE,uBAAUD,QAAV,KACAA,QAAQ,CAACE,IAAT,KAAkBC,SADlB,IAEAH,QAAQ,CAACE,IAAT,CAAcE,MAAd,KAAyB,CAH3B,EAIE;IACA,MAAM,IAAIC,KAAJ,CAAU,uDAAV,CAAN;EACD;;EACD,IAAMO,cAAc,GAAoB,EAAxC;;EACA,KAAoB,yBAAQ,CAACV,IAAT,CAAcD,QAAd,EAAwBY,MAA5C,EAAoBC,cAApB,EAAoBA,IAApB,EAAoD;IAA/C,IAAMC,OAAK,SAAX;;IACH,IAAIA,OAAK,CAACC,IAAN,KAAe,eAAnB,EAAoC;MAClC,IAAIC,SAAS,GAAkB;QAAEC,gBAAgB,EAAE;MAApB,CAA/B,CADkC,CACuB;;MACzD,IAAIC,sBAAsB,GAAGJ,OAAK,CAACK,UAAN,CAAiB,CAAjB,EAAoBC,KAAjD;;MACA,KAAkB,wBAAK,CAACD,UAAxB,EAAkBE,cAAlB,EAAkBA,IAAlB,EAAoC;QAA/B,IAAMC,GAAG,SAAT;;QACH,IACEA,GAAG,CAACC,GAAJ,IAAW,kBAAX,IACAL,sBAAsB,KAAKI,GAAG,CAACF,KAFjC,EAGE;UACAT,cAAc,CAACa,IAAf,CAAoBR,SAApB;UACAA,SAAS,GAAG;YAAEC,gBAAgB,EAAE;UAApB,CAAZ;UACAC,sBAAsB,GAAGI,GAAG,CAACF,KAA7B;QACD;;QACDJ,SAAS,CAACM,GAAG,CAACC,GAAL,CAAT,GAAqBD,GAAG,CAACF,KAAzB;MACD;;MACDT,cAAc,CAACa,IAAf,CAAoBR,SAApB;MACA,OAAOL,cAAP;IACD;EACF;;EACD,MAAM,IAAIP,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAhCDG","names":["getCodeId","txResult","msgIndex","logs","undefined","length","Error","codeId","eventsByType","exports","getContractAddress","contractAddress","getContractEvents","contractEvents","events","_i","event_1","type","eventData","contract_address","currentContractAddress","attributes","value","_b","att","key","push"],"sources":["../../src/util/contract.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}