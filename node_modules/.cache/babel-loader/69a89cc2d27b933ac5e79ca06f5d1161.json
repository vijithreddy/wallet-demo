{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgSwap = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar Coin_1 = require(\"../../Coin\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/terra/market/v1beta1/tx\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n/**\n * Executes a market swap between 2 denominations at the exchange rate registered by the\n * Oracle module. The account will lose the amount of coins offered, and receive funds\n * in the requested denomination after a swap fee has been applied.\n */\n\n\nvar MsgSwap =\n/** @class */\nfunction (_super) {\n  __extends(MsgSwap, _super);\n  /**\n   * @param trader trader's account address\n   * @param offer_coin coin to be swapped (from)\n   * @param ask_denom desired denomination (to)\n   */\n\n\n  function MsgSwap(trader, offer_coin, ask_denom) {\n    var _this = _super.call(this) || this;\n\n    _this.trader = trader;\n    _this.offer_coin = offer_coin;\n    _this.ask_denom = ask_denom;\n    return _this;\n  }\n\n  MsgSwap.fromAmino = function (data) {\n    var _a = data.value,\n        trader = _a.trader,\n        offer_coin = _a.offer_coin,\n        ask_denom = _a.ask_denom;\n    return new MsgSwap(trader, Coin_1.Coin.fromAmino(offer_coin), ask_denom);\n  };\n\n  MsgSwap.prototype.toAmino = function () {\n    var _a = this,\n        trader = _a.trader,\n        offer_coin = _a.offer_coin,\n        ask_denom = _a.ask_denom;\n\n    return {\n      type: 'market/MsgSwap',\n      value: {\n        trader: trader,\n        offer_coin: offer_coin.toAmino(),\n        ask_denom: ask_denom\n      }\n    };\n  };\n\n  MsgSwap.fromProto = function (proto) {\n    return new MsgSwap(proto.trader, Coin_1.Coin.fromProto(proto.offerCoin), proto.askDenom);\n  };\n\n  MsgSwap.prototype.toProto = function () {\n    var _a = this,\n        trader = _a.trader,\n        offer_coin = _a.offer_coin,\n        ask_denom = _a.ask_denom;\n\n    return tx_1.MsgSwap.fromPartial({\n      askDenom: ask_denom,\n      offerCoin: offer_coin.toProto(),\n      trader: trader\n    });\n  };\n\n  MsgSwap.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/terra.market.v1beta1.MsgSwap',\n      value: tx_1.MsgSwap.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgSwap.unpackAny = function (msgAny) {\n    return MsgSwap.fromProto(tx_1.MsgSwap.decode(msgAny.value));\n  };\n\n  MsgSwap.fromData = function (data) {\n    var trader = data.trader,\n        offer_coin = data.offer_coin,\n        ask_denom = data.ask_denom;\n    return new MsgSwap(trader, Coin_1.Coin.fromData(offer_coin), ask_denom);\n  };\n\n  MsgSwap.prototype.toData = function () {\n    var _a = this,\n        trader = _a.trader,\n        offer_coin = _a.offer_coin,\n        ask_denom = _a.ask_denom;\n\n    return {\n      '@type': '/terra.market.v1beta1.MsgSwap',\n      trader: trader,\n      offer_coin: offer_coin.toData(),\n      ask_denom: ask_denom\n    };\n  };\n\n  return MsgSwap;\n}(json_1.JSONSerializable);\n\nexports.MsgSwap = MsgSwap;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA;;AACA;AAEA;;;;;;;AAKA;AAAA;AAAA;EAA6BA;EAK3B;;;;;;;EAKA,iBACSC,MADT,EAESC,UAFT,EAGSC,SAHT,EAGyB;IAHzB,YAKEC,qBAAO,IALT;;IACSC;IACAA;IACAA;;EAGR;;EAEaC,oBAAd,UAAwBC,IAAxB,EAA2C;IAEvC,SACEA,IAAI,MADN;IAAA,IAASN,MAAM,YAAf;IAAA,IAAiBC,UAAU,gBAA3B;IAAA,IAA6BC,SAAS,eAAtC;IAEF,OAAO,IAAIG,OAAJ,CAAYL,MAAZ,EAAoBO,YAAKC,SAAL,CAAeP,UAAf,CAApB,EAAgDC,SAAhD,CAAP;EACD,CALa;;EAOPG,4BAAP;IACQ,SAAoC,IAApC;IAAA,IAAEL,MAAM,YAAR;IAAA,IAAUC,UAAU,gBAApB;IAAA,IAAsBC,SAAS,eAA/B;;IACN,OAAO;MACLO,IAAI,EAAE,gBADD;MAELC,KAAK,EAAE;QACLV,MAAM,QADD;QAELC,UAAU,EAAEA,UAAU,CAACU,OAAX,EAFP;QAGLT,SAAS;MAHJ;IAFF,CAAP;EAQD,CAVM;;EAYOG,oBAAd,UAAwBO,KAAxB,EAA4C;IAC1C,OAAO,IAAIP,OAAJ,CACLO,KAAK,CAACZ,MADD,EAELO,YAAKM,SAAL,CAAeD,KAAK,CAACE,SAArB,CAFK,EAGLF,KAAK,CAACG,QAHD,CAAP;EAKD,CANa;;EAQPV,4BAAP;IACQ,SAAoC,IAApC;IAAA,IAAEL,MAAM,YAAR;IAAA,IAAUC,UAAU,gBAApB;IAAA,IAAsBC,SAAS,eAA/B;;IACN,OAAOc,aAAWC,WAAX,CAAuB;MAC5BF,QAAQ,EAAEb,SADkB;MAE5BY,SAAS,EAAEb,UAAU,CAACiB,OAAX,EAFiB;MAG5BlB,MAAM;IAHsB,CAAvB,CAAP;EAKD,CAPM;;EASAK,4BAAP;IACE,OAAOc,UAAIF,WAAJ,CAAgB;MACrBG,OAAO,EAAE,+BADY;MAErBV,KAAK,EAAEM,aAAWK,MAAX,CAAkB,KAAKH,OAAL,EAAlB,EAAkCI,MAAlC;IAFc,CAAhB,CAAP;EAID,CALM;;EAOOjB,oBAAd,UAAwBkB,MAAxB,EAAmC;IACjC,OAAOlB,OAAO,CAACQ,SAAR,CAAkBG,aAAWQ,MAAX,CAAkBD,MAAM,CAACb,KAAzB,CAAlB,CAAP;EACD,CAFa;;EAIAL,mBAAd,UAAuBC,IAAvB,EAAyC;IAC/B,UAAM,GAA4BA,IAAI,OAAtC;IAAA,IAAQL,UAAU,GAAgBK,IAAI,WAAtC;IAAA,IAAoBJ,SAAS,GAAKI,IAAI,UAAtC;IACR,OAAO,IAAID,OAAJ,CAAYL,MAAZ,EAAoBO,YAAKkB,QAAL,CAAcxB,UAAd,CAApB,EAA+CC,SAA/C,CAAP;EACD,CAHa;;EAKPG,2BAAP;IACQ,SAAoC,IAApC;IAAA,IAAEL,MAAM,YAAR;IAAA,IAAUC,UAAU,gBAApB;IAAA,IAAsBC,SAAS,eAA/B;;IACN,OAAO;MACL,SAAS,+BADJ;MAELF,MAAM,QAFD;MAGLC,UAAU,EAAEA,UAAU,CAACyB,MAAX,EAHP;MAILxB,SAAS;IAJJ,CAAP;EAMD,CARM;;EAST;AAAC,CA/ED,CAA6ByB,uBAA7B;;AAAaC","names":["__extends","trader","offer_coin","ask_denom","_super","_this","MsgSwap","data","Coin_1","fromAmino","type","value","toAmino","proto","fromProto","offerCoin","askDenom","tx_1","fromPartial","toProto","any_1","typeUrl","encode","finish","msgAny","decode","fromData","toData","json_1","exports"],"sources":["../../../../src/core/market/msgs/MsgSwap.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}