{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PolicyConstraints = void 0;\n\nvar json_1 = require(\"../../util/json\");\n\nvar Coin_1 = require(\"../Coin\");\n\nvar numeric_1 = require(\"../numeric\");\n\nvar treasury_1 = require(\"@terra-money/terra.proto/terra/treasury/v1beta1/treasury\");\n/**\n * This captures the Treasury module's `tax_policy` and `reward_policy` parameters, which\n * determine how the Tax Rate and Reward Weight values are allowed to change.\n */\n\n\nvar PolicyConstraints =\n/** @class */\nfunction (_super) {\n  __extends(PolicyConstraints, _super);\n  /**\n   *\n   * @param rate_min minimum value\n   * @param rate_max maximum value\n   * @param cap Tax Cap (only applicable for Tax Rate)\n   * @param change_rate_max max change %\n   */\n\n\n  function PolicyConstraints(rate_min, rate_max, cap, change_rate_max) {\n    var _this = _super.call(this) || this;\n\n    _this.cap = cap;\n    _this.rate_min = new numeric_1.Dec(rate_min);\n    _this.rate_max = new numeric_1.Dec(rate_max);\n    _this.change_rate_max = new numeric_1.Dec(change_rate_max);\n    return _this;\n  }\n\n  PolicyConstraints.fromAmino = function (data) {\n    var rate_min = data.rate_min,\n        rate_max = data.rate_max,\n        cap = data.cap,\n        change_rate_max = data.change_rate_max;\n    return new PolicyConstraints(rate_min, rate_max, Coin_1.Coin.fromAmino(cap), change_rate_max);\n  };\n\n  PolicyConstraints.prototype.toAmino = function () {\n    var _a = this,\n        rate_min = _a.rate_min,\n        rate_max = _a.rate_max,\n        cap = _a.cap,\n        change_rate_max = _a.change_rate_max;\n\n    return {\n      rate_min: rate_min.toString(),\n      rate_max: rate_max.toString(),\n      cap: cap.toAmino(),\n      change_rate_max: change_rate_max.toString()\n    };\n  };\n\n  PolicyConstraints.fromData = function (data) {\n    var rate_min = data.rate_min,\n        rate_max = data.rate_max,\n        cap = data.cap,\n        change_rate_max = data.change_rate_max;\n    return new PolicyConstraints(rate_min, rate_max, Coin_1.Coin.fromData(cap), change_rate_max);\n  };\n\n  PolicyConstraints.prototype.toData = function () {\n    var _a = this,\n        rate_min = _a.rate_min,\n        rate_max = _a.rate_max,\n        cap = _a.cap,\n        change_rate_max = _a.change_rate_max;\n\n    return {\n      rate_min: rate_min.toString(),\n      rate_max: rate_max.toString(),\n      cap: cap.toData(),\n      change_rate_max: change_rate_max.toString()\n    };\n  };\n\n  PolicyConstraints.fromProto = function (proto) {\n    return new PolicyConstraints(proto.rateMax, proto.rateMin, Coin_1.Coin.fromProto(proto.cap), proto.changeRateMax);\n  };\n\n  PolicyConstraints.prototype.toProto = function () {\n    var _a = this,\n        rate_min = _a.rate_min,\n        rate_max = _a.rate_max,\n        cap = _a.cap,\n        change_rate_max = _a.change_rate_max;\n\n    return treasury_1.PolicyConstraints.fromPartial({\n      cap: cap.toProto(),\n      changeRateMax: change_rate_max.toString(),\n      rateMax: rate_max.toString(),\n      rateMin: rate_min.toString()\n    });\n  };\n  /**\n   * You can simulate the result of the clamping algorithm, which subjects updates in\n   * rate to the rules defined by the `PolicyConstraints`.\n   *\n   * @param prevRate previous rate\n   * @param newRate next rate\n   * @returns New rate, after clamping constraints have been applied\n   */\n\n\n  PolicyConstraints.prototype.clamp = function (prevRate, newRate) {\n    var p = new numeric_1.Dec(prevRate); // prev\n\n    var n = new numeric_1.Dec(newRate); // new\n\n    if (n.lt(this.rate_min)) {\n      n = this.rate_min;\n    } else if (n.gt(this.rate_max)) {\n      n = this.rate_max;\n    }\n\n    var delta = n.sub(p);\n\n    if (n.gt(p)) {\n      if (delta.gt(this.change_rate_max)) {\n        n = p.add(this.change_rate_max);\n      }\n    } else {\n      if (delta.abs().gt(this.change_rate_max)) {\n        n = p.sub(this.change_rate_max);\n      }\n    }\n\n    return n;\n  };\n\n  return PolicyConstraints;\n}(json_1.JSONSerializable);\n\nexports.PolicyConstraints = PolicyConstraints;","map":{"version":3,"mappings":"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","names":["__extends","rate_min","rate_max","cap","change_rate_max","_super","_this","numeric_1","PolicyConstraints","data","Coin_1","fromAmino","toString","toAmino","fromData","toData","proto","rateMax","rateMin","fromProto","changeRateMax","treasury_1","fromPartial","toProto","prevRate","newRate","p","n","lt","gt","delta","sub","add","abs","json_1","exports"],"sources":["../../../src/core/treasury/PolicyConstraints.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}