{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Coins = void 0;\n\nvar Coin_1 = require(\"./Coin\");\n\nvar json_1 = require(\"../util/json\");\n/**\n * Analagous to `sdk.Coins` and `sdk.DecCoins` from Cosmos-SDK, and represents a collection\n * of [[Coin]] objects.\n *\n */\n\n\nvar Coins =\n/** @class */\nfunction (_super) {\n  __extends(Coins, _super);\n  /**\n   * @param arg coins to input\n   */\n\n\n  function Coins(arg) {\n    if (arg === void 0) {\n      arg = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    if (arg instanceof Coins) {\n      _this._coins = __assign({}, arg._coins);\n    } else if (typeof arg === 'string') {\n      _this._coins = Coins.fromString(arg)._coins;\n    } else {\n      _this._coins = {};\n      var coins_2;\n\n      if (!Array.isArray(arg)) {\n        coins_2 = [];\n        Object.keys(arg).forEach(function (denom) {\n          return coins_2.push(new Coin_1.Coin(denom, arg[denom]));\n        });\n      } else {\n        coins_2 = arg;\n      }\n\n      for (var _i = 0, coins_1 = coins_2; _i < coins_1.length; _i++) {\n        var coin = coins_1[_i];\n        var denom = coin.denom;\n        var x = _this._coins[denom];\n\n        if (x !== undefined) {\n          _this._coins[denom] = x.add(coin);\n        } else {\n          _this._coins[denom] = coin;\n        }\n      } // convert all coins to Dec if one is Dec\n\n\n      if (!_this.toArray().every(function (c) {\n        return c.isIntCoin();\n      })) {\n        for (var _a = 0, _b = Object.keys(_this._coins); _a < _b.length; _a++) {\n          var denom = _b[_a];\n          _this._coins[denom] = _this._coins[denom].toDecCoin();\n        }\n      }\n    }\n\n    return _this;\n  } // implement iterator interface for interop\n\n\n  Coins.prototype[Symbol.iterator] = function () {\n    var index = -1;\n    var data = this.toArray();\n    return {\n      next: function () {\n        return {\n          value: data[++index],\n          done: index === data.length\n        };\n      }\n    };\n  };\n  /**\n   * Converts the Coins information to a comma-separated list.\n   *\n   * Eg: `15000ukrw,12000uluna`\n   */\n\n\n  Coins.prototype.toString = function () {\n    return this.toArray().map(function (c) {\n      return c.toString();\n    }).join(',');\n  };\n  /**\n   * Converts a comma-separated list of coins to a Coins object\n   *\n   * Eg. `1500ukrw,12302uluna`\n   *\n   * @param str comma-separated list of coins\n   */\n\n\n  Coins.fromString = function (str) {\n    var coin_strings = str.split(/,\\s*/);\n    var coins = coin_strings.map(function (s) {\n      return Coin_1.Coin.fromString(s);\n    });\n    return new Coins(coins);\n  };\n  /**\n   * Gets the list of denominations\n   */\n\n\n  Coins.prototype.denoms = function () {\n    return this.map(function (c) {\n      return c.denom;\n    });\n  };\n  /**\n   * Creates a new Coins object with all Decimal coins\n   */\n\n\n  Coins.prototype.toDecCoins = function () {\n    return new Coins(this.map(function (c) {\n      return c.toDecCoin();\n    }));\n  };\n  /**\n   * Creates a new Coins object with all Integer coins\n   */\n\n\n  Coins.prototype.toIntCoins = function () {\n    return new Coins(this.map(function (c) {\n      return c.toIntCoin();\n    }));\n  };\n  /**\n   * Creates a new Coins object with all Integer coins with ceiling the amount\n   */\n\n\n  Coins.prototype.toIntCeilCoins = function () {\n    return new Coins(this.map(function (c) {\n      return c.toIntCeilCoin();\n    }));\n  };\n  /**\n   * Gets the Coin for denomination if it exists in the collection.\n   * @param denom denomination to lookup\n   */\n\n\n  Coins.prototype.get = function (denom) {\n    return this._coins[denom];\n  };\n  /**\n   * Sets the Coin value for a denomination.\n   * @param denom denomination to set\n   * @param value value to set\n   */\n\n\n  Coins.prototype.set = function (denom, value) {\n    var val;\n\n    if (value instanceof Coin_1.Coin) {\n      if (value.denom != denom) {\n        throw new Error(\"Denoms must match when setting: \".concat(denom, \", \").concat(value.denom));\n      }\n\n      val = value;\n    } else {\n      val = new Coin_1.Coin(denom, value);\n    }\n\n    this._coins[denom] = val;\n  };\n  /**\n   * Gets the individual elements of the collection.\n   */\n\n\n  Coins.prototype.toArray = function () {\n    return Object.values(this._coins).sort(function (a, b) {\n      return a.denom.localeCompare(b.denom);\n    });\n  };\n  /**\n   * Adds a value from the elements of the collection. Coins of a similar denomination\n   * will be clobbered into one value containing their sum.\n   * @param other\n   */\n\n\n  Coins.prototype.add = function (other) {\n    if (other instanceof Coin_1.Coin) {\n      return new Coins(__spreadArray([other], Object.values(this._coins), true));\n    } else {\n      return new Coins(__spreadArray(__spreadArray([], Object.values(other._coins), true), Object.values(this._coins), true));\n    }\n  };\n  /**\n   * Subtracts a value from the elements of the collection.\n   * @param other\n   */\n\n\n  Coins.prototype.sub = function (other) {\n    return this.add(other.mul(-1));\n  };\n  /**\n   * Multiplies the elements of the collection by a value.\n   * @param other\n   */\n\n\n  Coins.prototype.mul = function (other) {\n    return new Coins(this.map(function (c) {\n      return c.mul(other);\n    }));\n  };\n  /**\n   * Divides the elements of the collection by a value.\n   * @param other\n   */\n\n\n  Coins.prototype.div = function (other) {\n    return new Coins(this.map(function (c) {\n      return c.div(other);\n    }));\n  };\n  /**\n   * Modulos the elements of the collection with a value.\n   * @param other\n   */\n\n\n  Coins.prototype.mod = function (other) {\n    return new Coins(this.map(function (c) {\n      return c.mod(other);\n    }));\n  };\n  /**\n   * Map a value onto the elements of the Coin collection.\n   * @param fn\n   */\n\n\n  Coins.prototype.map = function (fn) {\n    return this.toArray().map(fn);\n  };\n  /**\n   * Filters out the Coin objects that don't match the predicate\n   * @param fn predicate\n   */\n\n\n  Coins.prototype.filter = function (fn) {\n    return new Coins(this.toArray().filter(fn));\n  };\n\n  Coins.fromAmino = function (data) {\n    return new Coins((data !== null && data !== void 0 ? data : []).map(Coin_1.Coin.fromAmino));\n  };\n\n  Coins.prototype.toAmino = function () {\n    return this.toArray().map(function (c) {\n      return c.toAmino();\n    });\n  };\n\n  Coins.fromData = function (data) {\n    return new Coins((data !== null && data !== void 0 ? data : []).map(Coin_1.Coin.fromData));\n  };\n\n  Coins.prototype.toData = function () {\n    return this.toArray().map(function (c) {\n      return c.toData();\n    });\n  };\n\n  Coins.fromProto = function (data) {\n    return new Coins((data !== null && data !== void 0 ? data : []).map(Coin_1.Coin.fromProto));\n  };\n\n  Coins.prototype.toProto = function () {\n    return this.toArray().map(function (c) {\n      return c.toProto();\n    });\n  };\n\n  return Coins;\n}(json_1.JSONSerializable);\n\nexports.Coins = Coins;","map":{"version":3,"mappings":"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","names":["__extends","arg","_super","Coins","_this","_coins","__assign","fromString","coins_2","Array","isArray","Object","keys","forEach","push","Coin_1","denom","_i","coin","x","undefined","add","toArray","every","isIntCoin","_a","toDecCoin","Symbol","iterator","index","data","next","value","done","length","map","toString","join","str","coin_strings","split","coins","s","toIntCoin","toIntCeilCoin","val","Error","concat","values","sort","a","b","localeCompare","other","__spreadArray","mul","div","mod","fn","filter","fromAmino","toAmino","fromData","toData","fromProto","toProto","json_1","exports"],"sources":["../../src/core/Coins.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}