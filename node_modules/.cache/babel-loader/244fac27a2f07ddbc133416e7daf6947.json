{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CompactBitArray = exports.MultiSignature = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nconst long_1 = __importDefault(require(\"long\"));\n\nconst minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"cosmos.crypto.multisig.v1beta1\";\nconst baseMultiSignature = {};\nexports.MultiSignature = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    for (const v of message.signatures) {\n      writer.uint32(10).bytes(v);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseMultiSignature);\n    message.signatures = [];\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signatures.push(reader.bytes());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseMultiSignature);\n    message.signatures = [];\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(bytesFromBase64(e));\n      }\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n    } else {\n      obj.signatures = [];\n    }\n\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseMultiSignature);\n    message.signatures = [];\n\n    if (object.signatures !== undefined && object.signatures !== null) {\n      for (const e of object.signatures) {\n        message.signatures.push(e);\n      }\n    }\n\n    return message;\n  }\n\n};\nconst baseCompactBitArray = {\n  extraBitsStored: 0\n};\nexports.CompactBitArray = {\n  encode(message) {\n    let writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.extraBitsStored !== 0) {\n      writer.uint32(8).uint32(message.extraBitsStored);\n    }\n\n    if (message.elems.length !== 0) {\n      writer.uint32(18).bytes(message.elems);\n    }\n\n    return writer;\n  },\n\n  decode(input, length) {\n    const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    let end = length === undefined ? reader.len : reader.pos + length;\n    const message = Object.assign({}, baseCompactBitArray);\n    message.elems = new Uint8Array();\n\n    while (reader.pos < end) {\n      const tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.extraBitsStored = reader.uint32();\n          break;\n\n        case 2:\n          message.elems = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n\n  fromJSON(object) {\n    const message = Object.assign({}, baseCompactBitArray);\n    message.elems = new Uint8Array();\n\n    if (object.extraBitsStored !== undefined && object.extraBitsStored !== null) {\n      message.extraBitsStored = Number(object.extraBitsStored);\n    } else {\n      message.extraBitsStored = 0;\n    }\n\n    if (object.elems !== undefined && object.elems !== null) {\n      message.elems = bytesFromBase64(object.elems);\n    }\n\n    return message;\n  },\n\n  toJSON(message) {\n    const obj = {};\n    message.extraBitsStored !== undefined && (obj.extraBitsStored = message.extraBitsStored);\n    message.elems !== undefined && (obj.elems = base64FromBytes(message.elems !== undefined ? message.elems : new Uint8Array()));\n    return obj;\n  },\n\n  fromPartial(object) {\n    const message = Object.assign({}, baseCompactBitArray);\n\n    if (object.extraBitsStored !== undefined && object.extraBitsStored !== null) {\n      message.extraBitsStored = object.extraBitsStored;\n    } else {\n      message.extraBitsStored = 0;\n    }\n\n    if (object.elems !== undefined && object.elems !== null) {\n      message.elems = object.elems;\n    } else {\n      message.elems = new Uint8Array();\n    }\n\n    return message;\n  }\n\n};\n\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n})();\n\nconst atob = globalThis.atob || (b64 => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\n\nfunction bytesFromBase64(b64) {\n  const bin = atob(b64);\n  const arr = new Uint8Array(bin.length);\n\n  for (let i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nconst btoa = globalThis.btoa || (bin => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\n\nfunction base64FromBytes(arr) {\n  const bin = [];\n\n  for (const byte of arr) {\n    bin.push(String.fromCharCode(byte));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":{"version":3,"mappings":"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","names":["exports","baseMultiSignature","encode","message","writer","minimal_1","Writer","create","v","signatures","uint32","bytes","decode","input","length","reader","Reader","end","undefined","len","pos","Object","tag","push","skipType","fromJSON","object","e","bytesFromBase64","toJSON","obj","map","base64FromBytes","Uint8Array","fromPartial","baseCompactBitArray","extraBitsStored","elems","Number","globalThis","self","window","global","atob","b64","Buffer","from","toString","bin","arr","i","charCodeAt","btoa","byte","String","fromCharCode","join","util","Long","long_1","configure"],"sources":["../../../../../src/cosmos/crypto/multisig/v1beta1/multisig.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}