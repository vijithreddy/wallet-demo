{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgDelegateFeedConsent = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/terra/oracle/v1beta1/tx\");\n/**\n * A **feeeder** is an account which is responsible for signing transactions with Oracle vote\n * and prevote messages on behalf of the validator. The blockchain will reject\n * [[MsgExchangeRateVote]] and [[MsgExchangeRatePrevote]] messages in transactions\n * signed by an\n * account different than the registered feeder.\n *\n * The following message registers a validator's feeder address.\n */\n\n\nvar MsgDelegateFeedConsent =\n/** @class */\nfunction (_super) {\n  __extends(MsgDelegateFeedConsent, _super);\n  /**\n   * @param operator validator's operator address\n   * @param delegate account address to set to feeder\n   */\n\n\n  function MsgDelegateFeedConsent(operator, delegate) {\n    var _this = _super.call(this) || this;\n\n    _this.operator = operator;\n    _this.delegate = delegate;\n    return _this;\n  }\n\n  MsgDelegateFeedConsent.fromAmino = function (data) {\n    var _a = data.value,\n        operator = _a.operator,\n        delegate = _a.delegate;\n    return new MsgDelegateFeedConsent(operator, delegate);\n  };\n\n  MsgDelegateFeedConsent.prototype.toAmino = function () {\n    var _a = this,\n        operator = _a.operator,\n        delegate = _a.delegate;\n\n    return {\n      type: 'oracle/MsgDelegateFeedConsent',\n      value: {\n        operator: operator,\n        delegate: delegate\n      }\n    };\n  };\n\n  MsgDelegateFeedConsent.fromData = function (data) {\n    var operator = data.operator,\n        delegate = data.delegate;\n    return new MsgDelegateFeedConsent(operator, delegate);\n  };\n\n  MsgDelegateFeedConsent.prototype.toData = function () {\n    var _a = this,\n        operator = _a.operator,\n        delegate = _a.delegate;\n\n    return {\n      '@type': '/terra.oracle.v1beta1.MsgDelegateFeedConsent',\n      operator: operator,\n      delegate: delegate\n    };\n  };\n\n  MsgDelegateFeedConsent.fromProto = function (proto) {\n    return new MsgDelegateFeedConsent(proto.operator, proto.delegate);\n  };\n\n  MsgDelegateFeedConsent.prototype.toProto = function () {\n    var _a = this,\n        operator = _a.operator,\n        delegate = _a.delegate;\n\n    return tx_1.MsgDelegateFeedConsent.fromPartial({\n      delegate: delegate,\n      operator: operator\n    });\n  };\n\n  MsgDelegateFeedConsent.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/terra.oracle.v1beta1.MsgDelegateFeedConsent',\n      value: tx_1.MsgDelegateFeedConsent.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgDelegateFeedConsent.unpackAny = function (msgAny) {\n    return MsgDelegateFeedConsent.fromProto(tx_1.MsgDelegateFeedConsent.decode(msgAny.value));\n  };\n\n  return MsgDelegateFeedConsent;\n}(json_1.JSONSerializable);\n\nexports.MsgDelegateFeedConsent = MsgDelegateFeedConsent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;AAEA;;;;;;;;;;;AASA;AAAA;AAAA;EAA4CA;EAK1C;;;;;;EAIA,gCAAmBC,QAAnB,EAAgDC,QAAhD,EAAoE;IAApE,YACEC,qBAAO,IADT;;IAAmBC;IAA6BA;;EAE/C;;EAEaC,mCAAd,UACEC,IADF,EACoC;IAGhC,SACEA,IAAI,MADN;IAAA,IAASL,QAAQ,cAAjB;IAAA,IAAmBC,QAAQ,cAA3B;IAEF,OAAO,IAAIG,sBAAJ,CAA2BJ,QAA3B,EAAqCC,QAArC,CAAP;EACD,CAPa;;EASPG,2CAAP;IACQ,SAAyB,IAAzB;IAAA,IAAEJ,QAAQ,cAAV;IAAA,IAAYC,QAAQ,cAApB;;IACN,OAAO;MACLK,IAAI,EAAE,+BADD;MAELC,KAAK,EAAE;QACLP,QAAQ,UADH;QAELC,QAAQ;MAFH;IAFF,CAAP;EAOD,CATM;;EAWOG,kCAAd,UACEC,IADF,EACmC;IAEzB,YAAQ,GAAeA,IAAI,SAA3B;IAAA,IAAUJ,QAAQ,GAAKI,IAAI,SAA3B;IACR,OAAO,IAAID,sBAAJ,CAA2BJ,QAA3B,EAAqCC,QAArC,CAAP;EACD,CALa;;EAOPG,0CAAP;IACQ,SAAyB,IAAzB;IAAA,IAAEJ,QAAQ,cAAV;IAAA,IAAYC,QAAQ,cAApB;;IACN,OAAO;MACL,SAAS,8CADJ;MAELD,QAAQ,UAFH;MAGLC,QAAQ;IAHH,CAAP;EAKD,CAPM;;EASOG,mCAAd,UACEI,KADF,EACqC;IAEnC,OAAO,IAAIJ,sBAAJ,CAA2BI,KAAK,CAACR,QAAjC,EAA2CQ,KAAK,CAACP,QAAjD,CAAP;EACD,CAJa;;EAMPG,2CAAP;IACQ,SAAyB,IAAzB;IAAA,IAAEJ,QAAQ,cAAV;IAAA,IAAYC,QAAQ,cAApB;;IACN,OAAOQ,4BAA0BC,WAA1B,CAAsC;MAC3CT,QAAQ,UADmC;MAE3CD,QAAQ;IAFmC,CAAtC,CAAP;EAID,CANM;;EAQAI,2CAAP;IACE,OAAOO,UAAID,WAAJ,CAAgB;MACrBE,OAAO,EAAE,8CADY;MAErBL,KAAK,EAAEE,4BAA0BI,MAA1B,CAAiC,KAAKC,OAAL,EAAjC,EAAiDC,MAAjD;IAFc,CAAhB,CAAP;EAID,CALM;;EAOOX,mCAAd,UAAwBY,MAAxB,EAAmC;IACjC,OAAOZ,sBAAsB,CAACa,SAAvB,CACLR,4BAA0BS,MAA1B,CAAiCF,MAAM,CAACT,KAAxC,CADK,CAAP;EAGD,CAJa;;EAKhB;AAAC,CA3ED,CAA4CY,uBAA5C;;AAAaC","names":["__extends","operator","delegate","_super","_this","MsgDelegateFeedConsent","data","type","value","proto","tx_1","fromPartial","any_1","typeUrl","encode","toProto","finish","msgAny","fromProto","decode","json_1","exports"],"sources":["../../../../src/core/oracle/msgs/MsgDelegateFeedConsent.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}