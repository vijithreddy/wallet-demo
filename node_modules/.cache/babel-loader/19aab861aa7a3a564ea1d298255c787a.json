{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Account = void 0;\n\nvar BaseAccount_1 = require(\"./BaseAccount\");\n\nvar LazyGradedVestingAccount_1 = require(\"./LazyGradedVestingAccount\");\n/**\n * Stores information about an account fetched from the blockchain.\n */\n\n\nvar Account;\n\n(function (Account) {\n  function fromAmino(amino) {\n    switch (amino.type) {\n      case 'core/Account':\n        return BaseAccount_1.BaseAccount.fromAmino(amino);\n\n      case 'core/LazyGradedVestingAccount':\n        return LazyGradedVestingAccount_1.LazyGradedVestingAccount.fromAmino(amino);\n    }\n  }\n\n  Account.fromAmino = fromAmino;\n\n  function fromData(data) {\n    switch (data['@type']) {\n      case '/cosmos.auth.v1beta1.BaseAccount':\n        return BaseAccount_1.BaseAccount.fromData(data);\n\n      case '/terra.vesting.v1beta1.LazyGradedVestingAccount':\n        return LazyGradedVestingAccount_1.LazyGradedVestingAccount.fromData(data);\n    }\n  }\n\n  Account.fromData = fromData;\n\n  function fromProto(accountAny) {\n    var typeUrl = accountAny.typeUrl;\n\n    if (typeUrl === '/cosmos.auth.v1beta1.BaseAccount') {\n      return BaseAccount_1.BaseAccount.unpackAny(accountAny);\n    } else if (typeUrl === '/terra.vesting.v1beta1.LazyGradedVestingAccount') {\n      return LazyGradedVestingAccount_1.LazyGradedVestingAccount.unpackAny(accountAny);\n    }\n\n    throw new Error(\"Account type \".concat(typeUrl, \" not recognized\"));\n  }\n\n  Account.fromProto = fromProto;\n})(Account = exports.Account || (exports.Account = {}));","map":{"version":3,"mappings":";;;;;;;AACA;;AACA;AAGA;;;;;AAGA,IAAiBA,OAAjB;;AAAA,WAAiBA,OAAjB,EAAwB;EAKtB,SAAgBC,SAAhB,CAA0BC,KAA1B,EAA8C;IAC5C,QAAQA,KAAK,CAACC,IAAd;MACE,KAAK,cAAL;QACE,OAAOC,0BAAYH,SAAZ,CAAsBC,KAAtB,CAAP;;MACF,KAAK,+BAAL;QACE,OAAOG,oDAAyBJ,SAAzB,CAAmCC,KAAnC,CAAP;IAJJ;EAMD;;EAPeF,oBAASC,SAAT;;EAShB,SAAgBK,QAAhB,CAAyBC,IAAzB,EAA2C;IACzC,QAAQA,IAAI,CAAC,OAAD,CAAZ;MACE,KAAK,kCAAL;QACE,OAAOH,0BAAYE,QAAZ,CAAqBC,IAArB,CAAP;;MACF,KAAK,iDAAL;QACE,OAAOF,oDAAyBC,QAAzB,CAAkCC,IAAlC,CAAP;IAJJ;EAMD;;EAPeP,mBAAQM,QAAR;;EAShB,SAAgBE,SAAhB,CAA0BC,UAA1B,EAAmD;IACjD,IAAMC,OAAO,GAAGD,UAAU,CAACC,OAA3B;;IACA,IAAIA,OAAO,KAAK,kCAAhB,EAAoD;MAClD,OAAON,0BAAYO,SAAZ,CAAsBF,UAAtB,CAAP;IACD,CAFD,MAEO,IAAIC,OAAO,KAAK,iDAAhB,EAAmE;MACxE,OAAOL,oDAAyBM,SAAzB,CAAmCF,UAAnC,CAAP;IACD;;IAED,MAAM,IAAIG,KAAJ,CAAU,uBAAgBF,OAAhB,EAAuB,iBAAvB,CAAV,CAAN;EACD;;EATeV,oBAASQ,SAAT;AAUjB,CAjCD,EAAiBR,OAAO,GAAPa,sCAAO,EAAP,CAAjB","names":["Account","fromAmino","amino","type","BaseAccount_1","LazyGradedVestingAccount_1","fromData","data","fromProto","accountAny","typeUrl","unpackAny","Error","exports"],"sources":["../../../src/core/auth/Account.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}