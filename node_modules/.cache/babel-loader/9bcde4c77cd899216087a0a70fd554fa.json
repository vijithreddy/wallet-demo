{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgUpgradeClient = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/client/v1/tx\");\n/**\n * MsgUpgradeClient defines an sdk.Msg to upgrade an IBC client to a new client state\n */\n\n\nvar MsgUpgradeClient =\n/** @class */\nfunction (_super) {\n  __extends(MsgUpgradeClient, _super);\n  /**\n   * @param client_id client unique identifier\n   * @param client_state  upgraded client state\n   * @param consensus_state upgraded consensus state, only contains enough information to serve as a basis of trust in update logic\n   * @param proof_upgrade_client proof that old chain committed to new client\n   * @param proof_upgrade_consensus_state  proof that old chain committed to new consensus state\n   * @param signer signer address\n   */\n\n\n  function MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.client_id = client_id;\n    _this.client_state = client_state;\n    _this.consensus_state = consensus_state;\n    _this.proof_upgrade_client = proof_upgrade_client;\n    _this.proof_upgrade_consensus_state = proof_upgrade_consensus_state;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgUpgradeClient.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgUpgradeClient.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgUpgradeClient.fromData = function (data) {\n    var client_id = data.client_id,\n        client_state = data.client_state,\n        consensus_state = data.consensus_state,\n        proof_upgrade_client = data.proof_upgrade_client,\n        proof_upgrade_consensus_state = data.proof_upgrade_consensus_state,\n        signer = data.signer;\n    return new MsgUpgradeClient(client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer);\n  };\n\n  MsgUpgradeClient.prototype.toData = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        client_state = _a.client_state,\n        consensus_state = _a.consensus_state,\n        proof_upgrade_client = _a.proof_upgrade_client,\n        proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.client.v1.MsgUpgradeClient',\n      client_id: client_id,\n      client_state: client_state,\n      consensus_state: consensus_state,\n      proof_upgrade_client: proof_upgrade_client,\n      proof_upgrade_consensus_state: proof_upgrade_consensus_state,\n      signer: signer\n    };\n  };\n\n  MsgUpgradeClient.fromProto = function (proto) {\n    return new MsgUpgradeClient(proto.clientId, proto.clientState, proto.consensusState, Buffer.from(proto.proofUpgradeClient).toString('base64'), Buffer.from(proto.proofUpgradeConsensusState).toString('base64'), proto.signer);\n  };\n\n  MsgUpgradeClient.prototype.toProto = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        client_state = _a.client_state,\n        consensus_state = _a.consensus_state,\n        proof_upgrade_client = _a.proof_upgrade_client,\n        proof_upgrade_consensus_state = _a.proof_upgrade_consensus_state,\n        signer = _a.signer;\n\n    return tx_1.MsgUpgradeClient.fromPartial({\n      clientId: client_id,\n      clientState: client_state,\n      consensusState: consensus_state,\n      proofUpgradeClient: Buffer.from(proof_upgrade_client, 'base64'),\n      proofUpgradeConsensusState: Buffer.from(proof_upgrade_consensus_state, 'base64'),\n      signer: signer\n    });\n  };\n\n  MsgUpgradeClient.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.client.v1.MsgUpgradeClient',\n      value: tx_1.MsgUpgradeClient.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgUpgradeClient.unpackAny = function (msgAny) {\n    return MsgUpgradeClient.fromProto(tx_1.MsgUpgradeClient.decode(msgAny.value));\n  };\n\n  return MsgUpgradeClient;\n}(json_1.JSONSerializable);\n\nexports.MsgUpgradeClient = MsgUpgradeClient;","map":{"version":3,"mappings":"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","names":["__extends","client_id","client_state","consensus_state","proof_upgrade_client","proof_upgrade_consensus_state","signer","_super","_this","MsgUpgradeClient","_","Error","data","proto","clientId","clientState","consensusState","Buffer","from","proofUpgradeClient","toString","proofUpgradeConsensusState","tx_1","fromPartial","any_1","typeUrl","value","encode","toProto","finish","msgAny","fromProto","decode","json_1","exports"],"sources":["../../../../../src/core/ibc/msgs/client/MsgUpgradeClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}