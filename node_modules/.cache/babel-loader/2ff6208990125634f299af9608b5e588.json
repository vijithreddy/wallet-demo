{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DenomTrace = void 0;\n\nvar transfer_1 = require(\"@terra-money/terra.proto/ibc/applications/transfer/v1/transfer\");\n\nvar json_1 = require(\"../../util/json\");\n/**\n * DenomTrace is a monotonically increasing data type\n * that can be compared against another DenomTrace for the purposes of updating and\n * freezing clients\n *\n * Normally the RevisionDenomTrace is incremented at each height while keeping\n * RevisionNumber the same. However some consensus algorithms may choose to\n * reset the height in certain conditions e.g. hard forks, state-machine\n * breaking changes In these cases, the RevisionNumber is incremented so that\n * height continues to be monitonically increasing even as the RevisionDenomTrace\n * gets reset\n */\n\n\nvar DenomTrace =\n/** @class */\nfunction (_super) {\n  __extends(DenomTrace, _super);\n  /**\n   * @param path the revision that the client is currently on\n   * @param base_denom the height within the given revision\n   */\n\n\n  function DenomTrace(path, base_denom) {\n    var _this = _super.call(this) || this;\n\n    _this.path = path;\n    _this.base_denom = base_denom;\n    return _this;\n  }\n\n  DenomTrace.fromAmino = function (data) {\n    var path = data.path,\n        base_denom = data.base_denom;\n    return new DenomTrace(path, base_denom);\n  };\n\n  DenomTrace.prototype.toAmino = function () {\n    var _a = this,\n        path = _a.path,\n        base_denom = _a.base_denom;\n\n    var res = {\n      path: path,\n      base_denom: base_denom\n    };\n    return res;\n  };\n\n  DenomTrace.fromData = function (data) {\n    var path = data.path,\n        base_denom = data.base_denom;\n    return new DenomTrace(path, base_denom);\n  };\n\n  DenomTrace.prototype.toData = function () {\n    var _a = this,\n        path = _a.path,\n        base_denom = _a.base_denom;\n\n    var res = {\n      path: path,\n      base_denom: base_denom\n    };\n    return res;\n  };\n\n  DenomTrace.fromProto = function (proto) {\n    return new DenomTrace(proto.path, proto.baseDenom);\n  };\n\n  DenomTrace.prototype.toProto = function () {\n    var _a = this,\n        path = _a.path,\n        base_denom = _a.base_denom;\n\n    return transfer_1.DenomTrace.fromPartial({\n      path: path,\n      baseDenom: base_denom\n    });\n  };\n\n  return DenomTrace;\n}(json_1.JSONSerializable);\n\nexports.DenomTrace = DenomTrace;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;;;;;;;;;;;;;;AAYA;AAAA;AAAA;EAAgCA;EAK9B;;;;;;EAIA,oBAAmBC,IAAnB,EAAwCC,UAAxC,EAA0D;IAA1D,YACEC,qBAAO,IADT;;IAAmBC;IAAqBA;;EAEvC;;EAEaC,uBAAd,UAAwBC,IAAxB,EAA8C;IACpC,QAAI,GAAiBA,IAAI,KAAzB;IAAA,IAAMJ,UAAU,GAAKI,IAAI,WAAzB;IACR,OAAO,IAAID,UAAJ,CAAeJ,IAAf,EAAqBC,UAArB,CAAP;EACD,CAHa;;EAKPG,+BAAP;IACQ,SAAuB,IAAvB;IAAA,IAAEJ,IAAI,UAAN;IAAA,IAAQC,UAAU,gBAAlB;;IACN,IAAMK,GAAG,GAAqB;MAC5BN,IAAI,MADwB;MAE5BC,UAAU;IAFkB,CAA9B;IAIA,OAAOK,GAAP;EACD,CAPM;;EASOF,sBAAd,UAAuBC,IAAvB,EAA4C;IAClC,QAAI,GAAiBA,IAAI,KAAzB;IAAA,IAAMJ,UAAU,GAAKI,IAAI,WAAzB;IACR,OAAO,IAAID,UAAJ,CAAeJ,IAAf,EAAqBC,UAArB,CAAP;EACD,CAHa;;EAKPG,8BAAP;IACQ,SAAuB,IAAvB;IAAA,IAAEJ,IAAI,UAAN;IAAA,IAAQC,UAAU,gBAAlB;;IACN,IAAMK,GAAG,GAAoB;MAC3BN,IAAI,MADuB;MAE3BC,UAAU;IAFiB,CAA7B;IAIA,OAAOK,GAAP;EACD,CAPM;;EASOF,uBAAd,UAAwBG,KAAxB,EAA+C;IAC7C,OAAO,IAAIH,UAAJ,CAAeG,KAAK,CAACP,IAArB,EAA2BO,KAAK,CAACC,SAAjC,CAAP;EACD,CAFa;;EAIPJ,+BAAP;IACQ,SAAuB,IAAvB;IAAA,IAAEJ,IAAI,UAAN;IAAA,IAAQC,UAAU,gBAAlB;;IACN,OAAOQ,sBAAcC,WAAd,CAA0B;MAAEV,IAAI,MAAN;MAAQQ,SAAS,EAAEP;IAAnB,CAA1B,CAAP;EACD,CAHM;;EAIT;AAAC,CAjDD,CAAgCU,uBAAhC;;AAAaC","names":["__extends","path","base_denom","_super","_this","DenomTrace","data","res","proto","baseDenom","transfer_1","fromPartial","json_1","exports"],"sources":["../../../src/core/ibc-transfer/DenomTrace.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}