{"ast":null,"code":"var _jsxFileName = \"/Users/vijithreddybheemireddi/Documents/wallet/wallet-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CoinbaseCloud, Network } from '@coinbase/coinbase-cloud-sdk';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState('');\n  const [walletScan, setWalletScan] = useState({\n    network: \"\",\n    balance: \"\",\n    latest_block: \"\"\n  });\n  const [table_data, setTableData] = useState([]);\n  ;\n\n  function toFixedValue(value, dp) {\n    return +parseFloat(value).toFixed(dp);\n  }\n\n  function payLoad_erc20Tokens(walletAddress, contract_list) {\n    let tmp;\n    var address_contract_list = [];\n\n    for (var i = 0; i < contract_list.length; i++) {\n      tmp = {\n        \"address\": walletAddress,\n        \"contract\": contract_list[i]\n      };\n      address_contract_list.push(tmp);\n    }\n\n    return address_contract_list;\n  }\n\n  function populateTransactionData(transaction_list) {\n    let tmp;\n    var transaction_data = [];\n\n    for (var i = 0; i < transaction_list.length; i++) {\n      let block_timestamp = parseInt(transaction_list[i].blockTimestamp);\n      let current_timestamp = Date.now();\n      console.log(current_timestamp);\n      let time_diff = (current_timestamp - block_timestamp) / 1000;\n      let time_diff_days = Math.floor(time_diff / (3600 * 24));\n      let time_diff_hours = Math.floor(time_diff / 3600);\n      console.log(time_diff_days, time_diff_hours);\n      tmp = {\n        \"from\": transaction_list[i].from,\n        \"to\": transaction_list[i].to,\n        \"value\": ethers.utils.formatEther(transaction_list[i].value),\n        \"hash\": transaction_list[i].transactionHash,\n        \"block_number\": transaction_list[i].blockNumber,\n        \"Age\": time_diff\n      };\n      transaction_data.push(tmp);\n    }\n\n    return transaction_data;\n  }\n\n  async function scanWallet() {\n    const settings = {\n      apiUsername: process.env.REACT_APP_NODE_USERNAME,\n      // You can find this in your Node project's settings\n      apiPassword: process.env.REACT_APP_NODE_PASSWORD,\n      // Password associated with the username\n      network: Network.ETH_MAINNET\n    };\n\n    if (ethers.utils.isAddress(walletAddress)) {\n      const coinbaseCloud = new CoinbaseCloud(settings);\n      const cbProvider = coinbaseCloud.provider;\n      const network_obj = await cbProvider.getNetwork();\n      const latest_block = await cbProvider.getBlockNumber();\n      console.log(ethers.utils.hexlify(latest_block)); //transactions\n\n      const transactions = await coinbaseCloud.advanced.getTransactionsByAddress(walletAddress, '0x0', //start block\n      ethers.utils.hexlify(latest_block), //end block\n      'SENDER_OR_RECEIVER', 'desc', 10, 1);\n      console.log(\"Verify my transactions\", transactions.transactions);\n      let transaction_list = transactions.transactions;\n      console.log(populateTransactionData(transaction_list));\n      const contract_list = [\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\", \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"];\n      const contract_params = payLoad_erc20Tokens(walletAddress, contract_list); //call advanced API for erc20 tokens \n\n      const cb_balances = await coinbaseCloud.advanced.getBalances(contract_params);\n      let token_balances = cb_balances.balances[0].tokenBalances;\n      console.log(\"latest is: \", latest_block, \"Block -100\", latest_block - 50000);\n      const network = network_obj.name;\n      const preformat_balance = ethers.utils.formatEther(await cbProvider.getBalance(walletAddress));\n      const balance = toFixedValue(preformat_balance, 4);\n      setWalletScan({\n        network,\n        balance,\n        latest_block\n      });\n      let wrappedEthBalance;\n      let apeCoinBalance;\n      let usdcBalance;\n\n      for (const eachTokenBalance in token_balances) {\n        if (token_balances[eachTokenBalance].contract === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n          const preWrappedCoin = token_balances[eachTokenBalance].amount.toString();\n          wrappedEthBalance = ethers.utils.formatUnits(preWrappedCoin, token_balances[eachTokenBalance].decimals);\n          wrappedEthBalance = toFixedValue(wrappedEthBalance, 4);\n        } else if (token_balances[eachTokenBalance].contract === \"0x4d224452801aced8b2f0aebe155379bb5d594381\") {\n          const preApeCoin = token_balances[eachTokenBalance].amount.toString();\n          apeCoinBalance = ethers.utils.formatUnits(preApeCoin, token_balances[eachTokenBalance].decimals);\n          apeCoinBalance = toFixedValue(apeCoinBalance, 4);\n        } else if (token_balances[eachTokenBalance].contract === \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\") {\n          const preusdcBalance = token_balances[eachTokenBalance].amount.toString();\n          usdcBalance = ethers.utils.formatUnits(preusdcBalance, token_balances[eachTokenBalance].decimals);\n          usdcBalance = toFixedValue(usdcBalance, 4);\n        }\n      }\n\n      console.log(\"apecoin\", apeCoinBalance);\n      console.log(\"usdc\", usdcBalance);\n      console.log(\"wrapped\", wrappedEthBalance);\n      const table_data = [{\n        token_name: \"Ethereum\",\n        balance: balance\n      }, {\n        token_name: \"APECoin\",\n        balance: apeCoinBalance\n      }, {\n        token_name: \"Wrapped Ether\",\n        balance: wrappedEthBalance\n      }, {\n        token_name: \"USDC\",\n        balance: usdcBalance\n      }];\n      setTableData(table_data);\n    } else {\n      alert(\"Please enter the correct eth address\");\n    }\n  }\n\n  const setWalletAddr = event => {\n    setWalletAddress(event.target.value);\n  };\n  /*\n  const setContractAddress = event => {\n      setContractAddr(event.target.value);\n    };\n  */\n\n\n  const handleSubmit = event => {\n    event.preventDefault(); // üëáÔ∏è value of input field\n\n    scanWallet();\n    console.log(\"table data is\", typeof table_data);\n    console.log('WalletAddress ', walletAddress);\n  };\n  /*\n    function handleContractSubmit(event) {\n      event.preventDefault();\n      // üëáÔ∏è value of input field\n      console.log('ContractAddress ', contractAddress);\n    }\n  \n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Wallet Address Entered: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Network Name: \", walletScan.network]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Latest Block: \", walletScan.latest_block]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-style-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wallet Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"walletAddress\",\n            type: \"text\",\n            name: \"walletAddress\",\n            value: walletAddress,\n            onChange: setWalletAddr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Balances: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Token Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: table_data.map((value, key) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: value.token_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: value.balance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 25\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Transactions: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Jill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Eve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Jackson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"94\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Adam\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"67\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3pNFkyMCZVUr0oC+sSL67m0ZKes=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","CoinbaseCloud","Network","App","walletAddress","setWalletAddress","walletScan","setWalletScan","network","balance","latest_block","table_data","setTableData","toFixedValue","value","dp","parseFloat","toFixed","payLoad_erc20Tokens","contract_list","tmp","address_contract_list","i","length","push","populateTransactionData","transaction_list","transaction_data","block_timestamp","parseInt","blockTimestamp","current_timestamp","Date","now","console","log","time_diff","time_diff_days","Math","floor","time_diff_hours","from","to","utils","formatEther","transactionHash","blockNumber","scanWallet","settings","apiUsername","process","env","REACT_APP_NODE_USERNAME","apiPassword","REACT_APP_NODE_PASSWORD","ETH_MAINNET","isAddress","coinbaseCloud","cbProvider","provider","network_obj","getNetwork","getBlockNumber","hexlify","transactions","advanced","getTransactionsByAddress","contract_params","cb_balances","getBalances","token_balances","balances","tokenBalances","name","preformat_balance","getBalance","wrappedEthBalance","apeCoinBalance","usdcBalance","eachTokenBalance","contract","preWrappedCoin","amount","toString","formatUnits","decimals","preApeCoin","preusdcBalance","token_name","alert","setWalletAddr","event","target","handleSubmit","preventDefault","map","key"],"sources":["/Users/vijithreddybheemireddi/Documents/wallet/wallet-demo/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CoinbaseCloud, Network } from '@coinbase/coinbase-cloud-sdk';\nimport './App.css';\n\n\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState('');\n  const [walletScan, setWalletScan] = useState({\n    network: \"\",\n    balance: \"\",\n    latest_block: \"\"\n  });\n  const [table_data, setTableData] = useState([]);;\n\n  function toFixedValue(value, dp) {\n    return +parseFloat(value).toFixed(dp);\n  }\n\n  function payLoad_erc20Tokens(walletAddress, contract_list) {\n    let tmp;\n    var address_contract_list = []\n    for (var i = 0; i < contract_list.length; i++) {\n      tmp = { \"address\": walletAddress, \"contract\": contract_list[i] }\n      address_contract_list.push(tmp)\n    }\n    return address_contract_list\n  }\n\n\n  function populateTransactionData(transaction_list){\n    let tmp;\n    var transaction_data = []\n    for (var i = 0; i < transaction_list.length; i++) {\n      let block_timestamp=parseInt(transaction_list[i].blockTimestamp);\n      let current_timestamp=Date.now();\n      console.log(current_timestamp)\n      let time_diff=(current_timestamp-block_timestamp)/1000;\n      let time_diff_days=Math.floor(time_diff/(3600*24));\n      let time_diff_hours=Math.floor(time_diff/3600);\n      console.log(time_diff_days, time_diff_hours)\n      tmp = { \"from\": transaction_list[i].from, \"to\": transaction_list[i].to, \"value\": ethers.utils.formatEther(transaction_list[i].value), \"hash\": transaction_list[i].transactionHash, \"block_number\": transaction_list[i].blockNumber, \"Age\": time_diff }\n      transaction_data.push(tmp)\n    }\n    return transaction_data\n  }\n\n  async function scanWallet() {\n\n    const settings = {\n      apiUsername: process.env.REACT_APP_NODE_USERNAME, // You can find this in your Node project's settings\n      apiPassword: process.env.REACT_APP_NODE_PASSWORD, // Password associated with the username\n      network: Network.ETH_MAINNET\n    }\n\n\n    if (ethers.utils.isAddress(walletAddress)) {\n      const coinbaseCloud = new CoinbaseCloud(settings)\n      const cbProvider = coinbaseCloud.provider\n\n      const network_obj = await cbProvider.getNetwork();\n      const latest_block = await cbProvider.getBlockNumber()\n\n\n      console.log(ethers.utils.hexlify(latest_block))\n\n      //transactions\n      const transactions = await coinbaseCloud.advanced\n        .getTransactionsByAddress(\n          walletAddress,\n          '0x0',//start block\n          ethers.utils.hexlify(latest_block),//end block\n          'SENDER_OR_RECEIVER',\n          'desc',\n          10,\n          1\n        );\n\n      console.log(\"Verify my transactions\", transactions.transactions)\n      let transaction_list=transactions.transactions;\n      console.log(populateTransactionData(transaction_list))\n\n\n\n      const contract_list = [\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\", \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"]\n      const contract_params = payLoad_erc20Tokens(walletAddress, contract_list);\n      //call advanced API for erc20 tokens \n      const cb_balances = await coinbaseCloud.advanced.getBalances(contract_params)\n      let token_balances = cb_balances.balances[0].tokenBalances\n\n\n      console.log(\"latest is: \", latest_block, \"Block -100\", latest_block - 50000)\n\n\n      const network = network_obj.name;\n      const preformat_balance = ethers.utils.formatEther(await cbProvider.getBalance(walletAddress));\n\n      const balance = toFixedValue(preformat_balance, 4)\n      setWalletScan({\n        network,\n        balance,\n        latest_block\n      });\n\n      let wrappedEthBalance;\n      let apeCoinBalance;\n      let usdcBalance;\n      for (const eachTokenBalance in token_balances) {\n        if (token_balances[eachTokenBalance].contract === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n          const preWrappedCoin = token_balances[eachTokenBalance].amount.toString();\n          wrappedEthBalance = ethers.utils.formatUnits(preWrappedCoin, token_balances[eachTokenBalance].decimals);\n          wrappedEthBalance = toFixedValue(wrappedEthBalance, 4);\n        }\n        else if (token_balances[eachTokenBalance].contract === \"0x4d224452801aced8b2f0aebe155379bb5d594381\") {\n          const preApeCoin = token_balances[eachTokenBalance].amount.toString();\n          apeCoinBalance = ethers.utils.formatUnits(preApeCoin, token_balances[eachTokenBalance].decimals);\n          apeCoinBalance = toFixedValue(apeCoinBalance, 4)\n        }\n        else if (token_balances[eachTokenBalance].contract === \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\") {\n          const preusdcBalance = token_balances[eachTokenBalance].amount.toString();\n          usdcBalance = ethers.utils.formatUnits(preusdcBalance, token_balances[eachTokenBalance].decimals);\n          usdcBalance = toFixedValue(usdcBalance, 4)\n        }\n      }\n\n      console.log(\"apecoin\", apeCoinBalance);\n      console.log(\"usdc\", usdcBalance);\n      console.log(\"wrapped\", wrappedEthBalance);\n\n\n\n      const table_data = [\n        { token_name: \"Ethereum\", balance: balance },\n        { token_name: \"APECoin\", balance: apeCoinBalance },\n        { token_name: \"Wrapped Ether\", balance: wrappedEthBalance },\n        { token_name: \"USDC\", balance: usdcBalance }\n      ]\n      setTableData(table_data);\n\n    } else {\n      alert(\"Please enter the correct eth address\");\n    }\n\n\n\n  }\n\n\n  const setWalletAddr = event => {\n    setWalletAddress(event.target.value);\n  };\n  /*\n  const setContractAddress = event => {\n      setContractAddr(event.target.value);\n    };\n  */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // üëáÔ∏è value of input field\n    scanWallet();\n    console.log(\"table data is\", typeof (table_data));\n    console.log('WalletAddress ', walletAddress);\n\n  };\n  /*\n    function handleContractSubmit(event) {\n      event.preventDefault();\n      // üëáÔ∏è value of input field\n      console.log('ContractAddress ', contractAddress);\n    }\n  \n  */\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Wallet Address Entered: {walletAddress}</h3>\n        <h3>Network Name: {walletScan.network}</h3>\n        <h4>Latest Block: {walletScan.latest_block}</h4>\n        <div className=\"form-style-6\">\n          <h1>Wallet Scanner</h1>\n          <form onSubmit={handleSubmit}>\n            <input id=\"walletAddress\" type=\"text\" name=\"walletAddress\" value={walletAddress} onChange={setWalletAddr} />\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"column\">\n            <h3> Balances: </h3>\n            <table className=\"styled-table\">\n              <thead>\n                <tr>\n                  <th>Token Name</th>\n                  <th>Balance</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  table_data.map((value, key) => {\n                    return (\n                      <tr key={key}>\n                        <td>{value.token_name}</td>\n                        <td>{value.balance}</td>\n                      </tr>\n                    )\n                  })\n                }\n              </tbody>\n            </table>\n          </div>\n          <div className=\"column\">\n            <h3> Transactions: </h3>\n            <table className=\"styled-table\">\n\n              <thead>\n                <tr>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  <th>Points</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Jill</td>\n                  <td>Smith</td>\n                  <td>50</td>\n                </tr>\n                <tr>\n                  <td>Eve</td>\n                  <td>Jackson</td>\n                  <td>94</td>\n                </tr>\n                <tr>\n                  <td>Adam</td>\n                  <td>Johnson</td>\n                  <td>67</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}