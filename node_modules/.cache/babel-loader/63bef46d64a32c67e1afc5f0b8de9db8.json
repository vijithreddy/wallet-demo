{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgConnectionOpenAck = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar Version_1 = require(\"./Version\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/tx\");\n\nvar Height_1 = require(\"../client/Height\");\n/**\n * MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to\n * acknowledge the change of connection state to TRYOPEN on Chain B.\n */\n\n\nvar MsgConnectionOpenAck =\n/** @class */\nfunction (_super) {\n  __extends(MsgConnectionOpenAck, _super);\n  /**\n   * @param connection_id\n   * @param counterparty_connection_id\n   * @param version\n   * @param client_state\n   * @param proof_height proof of the initialization the connection on Chain B: `UNITIALIZED -> TRYOPEN`\n   * @param proof_try proof of client state included in message\n   * @param proof_client proof of client consensus state\n   * @param proof_consensus\n   * @param consenesus_height\n   * @param signer signer address\n   */\n\n\n  function MsgConnectionOpenAck(connection_id, counterparty_connection_id, version, client_state, proof_height, proof_try, proof_client, proof_consensus, consensus_height, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.connection_id = connection_id;\n    _this.counterparty_connection_id = counterparty_connection_id;\n    _this.version = version;\n    _this.client_state = client_state;\n    _this.proof_height = proof_height;\n    _this.proof_try = proof_try;\n    _this.proof_client = proof_client;\n    _this.proof_consensus = proof_consensus;\n    _this.consensus_height = consensus_height;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgConnectionOpenAck.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgConnectionOpenAck.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgConnectionOpenAck.fromData = function (data) {\n    var connection_id = data.connection_id,\n        counterparty_connection_id = data.counterparty_connection_id,\n        version = data.version,\n        client_state = data.client_state,\n        proof_height = data.proof_height,\n        proof_try = data.proof_try,\n        proof_client = data.proof_client,\n        proof_consensus = data.proof_consensus,\n        consensus_height = data.consensus_height,\n        signer = data.signer;\n    return new MsgConnectionOpenAck(connection_id, counterparty_connection_id, version ? Version_1.Version.fromData(version) : undefined, client_state, proof_height ? Height_1.Height.fromData(proof_height) : undefined, proof_try, proof_client, proof_consensus, consensus_height ? Height_1.Height.fromData(consensus_height) : undefined, signer);\n  };\n\n  MsgConnectionOpenAck.prototype.toData = function () {\n    var _a = this,\n        connection_id = _a.connection_id,\n        counterparty_connection_id = _a.counterparty_connection_id,\n        version = _a.version,\n        client_state = _a.client_state,\n        proof_height = _a.proof_height,\n        proof_try = _a.proof_try,\n        proof_client = _a.proof_client,\n        proof_consensus = _a.proof_consensus,\n        consensus_height = _a.consensus_height,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.connection.v1.MsgConnectionOpenAck',\n      connection_id: connection_id,\n      counterparty_connection_id: counterparty_connection_id,\n      version: version ? version.toData() : undefined,\n      client_state: client_state,\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      proof_try: proof_try,\n      proof_client: proof_client,\n      proof_consensus: proof_consensus,\n      consensus_height: consensus_height ? consensus_height.toData() : undefined,\n      signer: signer\n    };\n  };\n\n  MsgConnectionOpenAck.fromProto = function (proto) {\n    return new MsgConnectionOpenAck(proto.connectionId, proto.counterpartyConnectionId, proto.version ? Version_1.Version.fromProto(proto.version) : undefined, proto.clientState, proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, Buffer.from(proto.proofTry).toString('base64'), Buffer.from(proto.proofClient).toString('base64'), Buffer.from(proto.proofConsensus).toString('base64'), proto.consensusHeight ? Height_1.Height.fromProto(proto.consensusHeight) : undefined, proto.signer);\n  };\n\n  MsgConnectionOpenAck.prototype.toProto = function () {\n    var _a = this,\n        connection_id = _a.connection_id,\n        counterparty_connection_id = _a.counterparty_connection_id,\n        version = _a.version,\n        client_state = _a.client_state,\n        proof_height = _a.proof_height,\n        proof_try = _a.proof_try,\n        proof_client = _a.proof_client,\n        proof_consensus = _a.proof_consensus,\n        consensus_height = _a.consensus_height,\n        signer = _a.signer;\n\n    return tx_1.MsgConnectionOpenAck.fromPartial({\n      connectionId: connection_id,\n      counterpartyConnectionId: counterparty_connection_id,\n      version: version ? version.toProto() : undefined,\n      clientState: client_state,\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      proofTry: Buffer.from(proof_try, 'base64'),\n      proofClient: Buffer.from(proof_client, 'base64'),\n      proofConsensus: Buffer.from(proof_consensus, 'base64'),\n      consensusHeight: consensus_height ? consensus_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n\n  MsgConnectionOpenAck.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.connection.v1.MsgConnectionOpenAck',\n      value: tx_1.MsgConnectionOpenAck.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgConnectionOpenAck.unpackAny = function (msgAny) {\n    return MsgConnectionOpenAck.fromProto(tx_1.MsgConnectionOpenAck.decode(msgAny.value));\n  };\n\n  return MsgConnectionOpenAck;\n}(json_1.JSONSerializable);\n\nexports.MsgConnectionOpenAck = MsgConnectionOpenAck;","map":{"version":3,"mappings":"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","names":["__extends","connection_id","counterparty_connection_id","version","client_state","proof_height","proof_try","proof_client","proof_consensus","consensus_height","signer","_super","_this","MsgConnectionOpenAck","_","Error","data","Version_1","fromData","undefined","Height_1","toData","proto","connectionId","counterpartyConnectionId","fromProto","clientState","proofHeight","Buffer","from","proofTry","toString","proofClient","proofConsensus","consensusHeight","tx_1","fromPartial","toProto","any_1","typeUrl","value","encode","finish","msgAny","decode","json_1","exports"],"sources":["../../../../../src/core/ibc/msgs/connection/MsgConnectionOpenAck.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}