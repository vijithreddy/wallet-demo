{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LCDClient = void 0;\n\nvar APIRequester_1 = require(\"./APIRequester\");\n\nvar api_1 = require(\"./api\");\n\nvar LCDUtils_1 = require(\"./LCDUtils\");\n\nvar Wallet_1 = require(\"./Wallet\");\n\nvar DEFAULT_LCD_OPTIONS = {\n  gasAdjustment: 1.75\n};\nvar DEFAULT_GAS_PRICES_BY_CHAIN_ID = {\n  default: {\n    uluna: 0.15\n  },\n  'columbus-5': {\n    uluna: 0.015\n  },\n  'bombay-12': {\n    uluna: 0.15\n  }\n};\n/**\n * An object repesenting a connection to a terrad node running the Lite Client Daemon (LCD)\n * server, a REST server providing access to a node.\n *\n * ### Example\n *\n * ```ts\n * import { LCDClient, Coin } from 'terra.js';\n *\n * const terra = new LCDClient({\n *    URL: \"https://lcd.terra.dev\",\n *    chainID: \"columbus-3\"\n * });\n *\n * terra.market.swapRate(new Coin('uluna', 10000), 'ukrw').then(c => console.log(c.toString()));\n * ```\n */\n\nvar LCDClient =\n/** @class */\nfunction () {\n  /**\n   * Creates a new LCD client with the specified configuration.\n   *\n   * @param config LCD configuration\n   */\n  function LCDClient(config) {\n    this.config = __assign(__assign(__assign({}, DEFAULT_LCD_OPTIONS), {\n      gasPrices: DEFAULT_GAS_PRICES_BY_CHAIN_ID[config.chainID] || DEFAULT_GAS_PRICES_BY_CHAIN_ID['default']\n    }), config);\n    this.apiRequester = new APIRequester_1.APIRequester(this.config.URL); // instantiate APIs\n\n    this.auth = new api_1.AuthAPI(this.apiRequester);\n    this.bank = new api_1.BankAPI(this.apiRequester);\n    this.distribution = new api_1.DistributionAPI(this.apiRequester);\n    this.feeGrant = new api_1.FeeGrantAPI(this.apiRequester);\n    this.gov = new api_1.GovAPI(this.apiRequester);\n    this.market = new api_1.MarketAPI(this.apiRequester);\n    this.mint = new api_1.MintAPI(this.apiRequester);\n    this.authz = new api_1.AuthzAPI(this.apiRequester);\n    this.oracle = new api_1.OracleAPI(this.apiRequester);\n    this.slashing = new api_1.SlashingAPI(this.apiRequester);\n    this.staking = new api_1.StakingAPI(this.apiRequester);\n    this.tendermint = new api_1.TendermintAPI(this.apiRequester);\n    this.treasury = new api_1.TreasuryAPI(this.apiRequester);\n    this.wasm = new api_1.WasmAPI(this.apiRequester);\n    this.ibcTransfer = new api_1.IbcTransferAPI(this.apiRequester);\n    this.tx = new api_1.TxAPI(this);\n    this.utils = new LCDUtils_1.LCDUtils(this);\n  }\n  /** Creates a new wallet with the Key. */\n\n\n  LCDClient.prototype.wallet = function (key) {\n    return new Wallet_1.Wallet(this, key);\n  };\n\n  return LCDClient;\n}();\n\nexports.LCDClient = LCDClient;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAkBA;;AACA;;AA2BA,IAAMA,mBAAmB,GAA6B;EACpDC,aAAa,EAAE;AADqC,CAAtD;AAIA,IAAMC,8BAA8B,GAAmC;EACrEC,OAAO,EAAE;IACPC,KAAK,EAAE;EADA,CAD4D;EAIrE,cAAc;IACZA,KAAK,EAAE;EADK,CAJuD;EAOrE,aAAa;IACXA,KAAK,EAAE;EADI;AAPwD,CAAvE;AAYA;;;;;;;;;;;;;;;;;;AAkBA;AAAA;AAAA;EAuBE;;;;;EAKA,mBAAYC,MAAZ,EAAmC;IACjC,KAAKA,MAAL,GAAWC,+BACNN,mBADM,GACa;MACtBO,SAAS,EACPL,8BAA8B,CAACG,MAAM,CAACG,OAAR,CAA9B,IACAN,8BAA8B,CAAC,SAAD;IAHV,CADb,GAKNG,MALM,CAAX;IAQA,KAAKI,YAAL,GAAoB,IAAIC,2BAAJ,CAAiB,KAAKL,MAAL,CAAYM,GAA7B,CAApB,CATiC,CAWjC;;IACA,KAAKC,IAAL,GAAY,IAAIC,aAAJ,CAAY,KAAKJ,YAAjB,CAAZ;IACA,KAAKK,IAAL,GAAY,IAAID,aAAJ,CAAY,KAAKJ,YAAjB,CAAZ;IACA,KAAKM,YAAL,GAAoB,IAAIF,qBAAJ,CAAoB,KAAKJ,YAAzB,CAApB;IACA,KAAKO,QAAL,GAAgB,IAAIH,iBAAJ,CAAgB,KAAKJ,YAArB,CAAhB;IACA,KAAKQ,GAAL,GAAW,IAAIJ,YAAJ,CAAW,KAAKJ,YAAhB,CAAX;IACA,KAAKS,MAAL,GAAc,IAAIL,eAAJ,CAAc,KAAKJ,YAAnB,CAAd;IACA,KAAKU,IAAL,GAAY,IAAIN,aAAJ,CAAY,KAAKJ,YAAjB,CAAZ;IACA,KAAKW,KAAL,GAAa,IAAIP,cAAJ,CAAa,KAAKJ,YAAlB,CAAb;IACA,KAAKY,MAAL,GAAc,IAAIR,eAAJ,CAAc,KAAKJ,YAAnB,CAAd;IACA,KAAKa,QAAL,GAAgB,IAAIT,iBAAJ,CAAgB,KAAKJ,YAArB,CAAhB;IACA,KAAKc,OAAL,GAAe,IAAIV,gBAAJ,CAAe,KAAKJ,YAApB,CAAf;IACA,KAAKe,UAAL,GAAkB,IAAIX,mBAAJ,CAAkB,KAAKJ,YAAvB,CAAlB;IACA,KAAKgB,QAAL,GAAgB,IAAIZ,iBAAJ,CAAgB,KAAKJ,YAArB,CAAhB;IACA,KAAKiB,IAAL,GAAY,IAAIb,aAAJ,CAAY,KAAKJ,YAAjB,CAAZ;IACA,KAAKkB,WAAL,GAAmB,IAAId,oBAAJ,CAAmB,KAAKJ,YAAxB,CAAnB;IACA,KAAKmB,EAAL,GAAU,IAAIf,WAAJ,CAAU,IAAV,CAAV;IAEA,KAAKgB,KAAL,GAAa,IAAIC,mBAAJ,CAAa,IAAb,CAAb;EACD;EAED;;;EACOC,6BAAP,UAAcC,GAAd,EAAsB;IACpB,OAAO,IAAIC,eAAJ,CAAW,IAAX,EAAiBD,GAAjB,CAAP;EACD,CAFM;;EAGT;AAAC,CAhED;;AAAaE","names":["DEFAULT_LCD_OPTIONS","gasAdjustment","DEFAULT_GAS_PRICES_BY_CHAIN_ID","default","uluna","config","__assign","gasPrices","chainID","apiRequester","APIRequester_1","URL","auth","api_1","bank","distribution","feeGrant","gov","market","mint","authz","oracle","slashing","staking","tendermint","treasury","wasm","ibcTransfer","tx","utils","LCDUtils_1","LCDClient","key","Wallet_1","exports"],"sources":["../../../src/client/lcd/LCDClient.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}