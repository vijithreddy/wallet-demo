{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Counterparty = void 0;\n\nvar channel_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/channel\");\n\nvar json_1 = require(\"../../../../util/json\");\n/** Counterparty defines a channel end counterparty */\n\n\nvar Counterparty =\n/** @class */\nfunction (_super) {\n  __extends(Counterparty, _super);\n  /**\n   * @param port_id port on the counterparty chain which owns the other end of the channel.\n   * @param channel_id channel end on the counterparty chain\n   */\n\n\n  function Counterparty(port_id, channel_id) {\n    var _this = _super.call(this) || this;\n\n    _this.port_id = port_id;\n    _this.channel_id = channel_id;\n    return _this;\n  }\n\n  Counterparty.fromAmino = function (data) {\n    var port_id = data.port_id,\n        channel_id = data.channel_id;\n    return new Counterparty(port_id, channel_id);\n  };\n\n  Counterparty.prototype.toAmino = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        channel_id = _a.channel_id;\n\n    var res = {\n      port_id: port_id,\n      channel_id: channel_id\n    };\n    return res;\n  };\n\n  Counterparty.fromData = function (data) {\n    var port_id = data.port_id,\n        channel_id = data.channel_id;\n    return new Counterparty(port_id, channel_id);\n  };\n\n  Counterparty.prototype.toData = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        channel_id = _a.channel_id;\n\n    var res = {\n      port_id: port_id,\n      channel_id: channel_id\n    };\n    return res;\n  };\n\n  Counterparty.fromProto = function (proto) {\n    return new Counterparty(proto.portId, proto.channelId);\n  };\n\n  Counterparty.prototype.toProto = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        channel_id = _a.channel_id;\n\n    return channel_1.Counterparty.fromPartial({\n      portId: port_id,\n      channelId: channel_id\n    });\n  };\n\n  return Counterparty;\n}(json_1.JSONSerializable);\n\nexports.Counterparty = Counterparty;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;AAEA;;;AACA;AAAA;AAAA;EAAkCA;EAKhC;;;;;;EAIA,sBAAmBC,OAAnB,EAA2CC,UAA3C,EAA6D;IAA7D,YACEC,qBAAO,IADT;;IAAmBC;IAAwBA;;EAE1C;;EAEaC,yBAAd,UAAwBC,IAAxB,EAAgD;IACtC,WAAO,GAAiBA,IAAI,QAA5B;IAAA,IAASJ,UAAU,GAAKI,IAAI,WAA5B;IACR,OAAO,IAAID,YAAJ,CAAiBJ,OAAjB,EAA0BC,UAA1B,CAAP;EACD,CAHa;;EAKPG,iCAAP;IACQ,SAA0B,IAA1B;IAAA,IAAEJ,OAAO,aAAT;IAAA,IAAWC,UAAU,gBAArB;;IACN,IAAMK,GAAG,GAAuB;MAC9BN,OAAO,SADuB;MAE9BC,UAAU;IAFoB,CAAhC;IAIA,OAAOK,GAAP;EACD,CAPM;;EASOF,wBAAd,UAAuBC,IAAvB,EAA8C;IACpC,WAAO,GAAiBA,IAAI,QAA5B;IAAA,IAASJ,UAAU,GAAKI,IAAI,WAA5B;IACR,OAAO,IAAID,YAAJ,CAAiBJ,OAAjB,EAA0BC,UAA1B,CAAP;EACD,CAHa;;EAKPG,gCAAP;IACQ,SAA0B,IAA1B;IAAA,IAAEJ,OAAO,aAAT;IAAA,IAAWC,UAAU,gBAArB;;IACN,IAAMK,GAAG,GAAsB;MAC7BN,OAAO,SADsB;MAE7BC,UAAU;IAFmB,CAA/B;IAIA,OAAOK,GAAP;EACD,CAPM;;EASOF,yBAAd,UAAwBG,KAAxB,EAAiD;IAC/C,OAAO,IAAIH,YAAJ,CAAiBG,KAAK,CAACC,MAAvB,EAA+BD,KAAK,CAACE,SAArC,CAAP;EACD,CAFa;;EAIPL,iCAAP;IACQ,SAA0B,IAA1B;IAAA,IAAEJ,OAAO,aAAT;IAAA,IAAWC,UAAU,gBAArB;;IACN,OAAOS,uBAAgBC,WAAhB,CAA4B;MACjCH,MAAM,EAAER,OADyB;MAEjCS,SAAS,EAAER;IAFsB,CAA5B,CAAP;EAID,CANM;;EAOT;AAAC,CApDD,CAAkCW,uBAAlC;;AAAaC","names":["__extends","port_id","channel_id","_super","_this","Counterparty","data","res","proto","portId","channelId","channel_1","fromPartial","json_1","exports"],"sources":["../../../../../src/core/ibc/msgs/channel/Counterparty.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}