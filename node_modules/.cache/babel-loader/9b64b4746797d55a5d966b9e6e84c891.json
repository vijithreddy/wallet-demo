{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgChannelOpenConfirm = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar Height_1 = require(\"../client/Height\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/tx\");\n/**\n *  MsgChannelOpenConfirm defines a msg sent by a Relayer to Chain B to acknowledge the change of channel state to OPEN on Chain A.\n */\n\n\nvar MsgChannelOpenConfirm =\n/** @class */\nfunction (_super) {\n  __extends(MsgChannelOpenConfirm, _super);\n  /**\n   * @param port_id identifier of the port to use\n   * @param channel_id\n   * @param proof_ack\n   * @param proof_height\n   * @param signer signer address\n   */\n\n\n  function MsgChannelOpenConfirm(port_id, channel_id, proof_ack, proof_height, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.port_id = port_id;\n    _this.channel_id = channel_id;\n    _this.proof_ack = proof_ack;\n    _this.proof_height = proof_height;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgChannelOpenConfirm.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgChannelOpenConfirm.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgChannelOpenConfirm.fromData = function (data) {\n    var port_id = data.port_id,\n        channel_id = data.channel_id,\n        proof_ack = data.proof_ack,\n        proof_height = data.proof_height,\n        signer = data.signer;\n    return new MsgChannelOpenConfirm(port_id, channel_id, proof_ack, proof_height ? Height_1.Height.fromData(proof_height) : undefined, signer);\n  };\n\n  MsgChannelOpenConfirm.prototype.toData = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        channel_id = _a.channel_id,\n        proof_ack = _a.proof_ack,\n        proof_height = _a.proof_height,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.channel.v1.MsgChannelOpenConfirm',\n      port_id: port_id,\n      channel_id: channel_id,\n      proof_ack: proof_ack,\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      signer: signer\n    };\n  };\n\n  MsgChannelOpenConfirm.fromProto = function (proto) {\n    return new MsgChannelOpenConfirm(proto.portId, proto.channelId, Buffer.from(proto.proofAck).toString('base64'), proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, proto.signer);\n  };\n\n  MsgChannelOpenConfirm.prototype.toProto = function () {\n    var _a = this,\n        port_id = _a.port_id,\n        channel_id = _a.channel_id,\n        proof_ack = _a.proof_ack,\n        proof_height = _a.proof_height,\n        signer = _a.signer;\n\n    return tx_1.MsgChannelOpenConfirm.fromPartial({\n      portId: port_id,\n      channelId: channel_id,\n      proofAck: Buffer.from(proof_ack, 'base64'),\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n\n  MsgChannelOpenConfirm.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.channel.v1.MsgChannelOpenConfirm',\n      value: tx_1.MsgChannelOpenConfirm.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgChannelOpenConfirm.unpackAny = function (msgAny) {\n    return MsgChannelOpenConfirm.fromProto(tx_1.MsgChannelOpenConfirm.decode(msgAny.value));\n  };\n\n  return MsgChannelOpenConfirm;\n}(json_1.JSONSerializable);\n\nexports.MsgChannelOpenConfirm = MsgChannelOpenConfirm;","map":{"version":3,"mappings":"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","names":["__extends","port_id","channel_id","proof_ack","proof_height","signer","_super","_this","MsgChannelOpenConfirm","_","Error","data","Height_1","fromData","undefined","toData","proto","portId","channelId","Buffer","from","proofAck","toString","proofHeight","fromProto","tx_1","fromPartial","toProto","any_1","typeUrl","value","encode","finish","msgAny","decode","json_1","exports"],"sources":["../../../../../src/core/ibc/msgs/channel/MsgChannelOpenConfirm.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}