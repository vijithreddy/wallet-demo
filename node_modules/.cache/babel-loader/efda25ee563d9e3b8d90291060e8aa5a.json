{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgCreateValidator = void 0;\n\nvar json_1 = require(\"../../../util/json\");\n\nvar Coin_1 = require(\"../../Coin\");\n\nvar numeric_1 = require(\"../../numeric\");\n\nvar Validator_1 = require(\"../Validator\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/cosmos/staking/v1beta1/tx\");\n\nvar PublicKey_1 = require(\"../../PublicKey\");\n/**\n * For new validators, this message registers a validator address to be a delegate on\n * the blockchain.\n */\n\n\nvar MsgCreateValidator =\n/** @class */\nfunction (_super) {\n  __extends(MsgCreateValidator, _super);\n  /**\n   *\n   * @param description validator's delegate information\n   * @param commission validator's commission policy\n   * @param min_self_delegation minimum self delegation\n   * @param delegator_address validator's account address\n   * @param validator_address validator's operator address\n   * @param pubkey validator's consensus public key\n   * @param value amount to use for self-delegation\n   */\n\n\n  function MsgCreateValidator(description, commission, min_self_delegation, delegator_address, validator_address, pubkey, value) {\n    var _this = _super.call(this) || this;\n\n    _this.description = description;\n    _this.commission = commission;\n    _this.min_self_delegation = min_self_delegation;\n    _this.delegator_address = delegator_address;\n    _this.validator_address = validator_address;\n    _this.pubkey = pubkey;\n    _this.value = value;\n    return _this;\n  }\n\n  MsgCreateValidator.fromAmino = function (data) {\n    var _a = data.value,\n        description = _a.description,\n        commission = _a.commission,\n        min_self_delegation = _a.min_self_delegation,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        pubkey = _a.pubkey,\n        value = _a.value;\n    return new MsgCreateValidator(description, Validator_1.Validator.CommissionRates.fromAmino(commission), new numeric_1.Int(min_self_delegation), delegator_address, validator_address, PublicKey_1.ValConsPublicKey.fromAmino(pubkey), Coin_1.Coin.fromAmino(value));\n  };\n\n  MsgCreateValidator.prototype.toAmino = function () {\n    var _a = this,\n        description = _a.description,\n        commission = _a.commission,\n        min_self_delegation = _a.min_self_delegation,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        pubkey = _a.pubkey,\n        value = _a.value;\n\n    return {\n      type: 'staking/MsgCreateValidator',\n      value: {\n        description: description,\n        commission: commission.toAmino(),\n        min_self_delegation: min_self_delegation.toString(),\n        delegator_address: delegator_address,\n        validator_address: validator_address,\n        pubkey: pubkey.toAmino(),\n        value: value.toAmino()\n      }\n    };\n  };\n\n  MsgCreateValidator.fromData = function (data) {\n    var description = data.description,\n        commission = data.commission,\n        min_self_delegation = data.min_self_delegation,\n        delegator_address = data.delegator_address,\n        validator_address = data.validator_address,\n        pubkey = data.pubkey,\n        value = data.value;\n    return new MsgCreateValidator(description, Validator_1.Validator.CommissionRates.fromData(commission), new numeric_1.Int(min_self_delegation), delegator_address, validator_address, PublicKey_1.ValConsPublicKey.fromData(pubkey), Coin_1.Coin.fromData(value));\n  };\n\n  MsgCreateValidator.prototype.toData = function () {\n    var _a = this,\n        description = _a.description,\n        commission = _a.commission,\n        min_self_delegation = _a.min_self_delegation,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        pubkey = _a.pubkey,\n        value = _a.value;\n\n    return {\n      '@type': '/cosmos.staking.v1beta1.MsgCreateValidator',\n      description: description,\n      commission: commission.toData(),\n      min_self_delegation: min_self_delegation.toString(),\n      delegator_address: delegator_address,\n      validator_address: validator_address,\n      pubkey: pubkey.toData(),\n      value: value.toData()\n    };\n  };\n\n  MsgCreateValidator.fromProto = function (proto) {\n    return new MsgCreateValidator(Validator_1.Validator.Description.fromProto(proto.description), Validator_1.Validator.CommissionRates.fromProto(proto.commission), new numeric_1.Int(proto.minSelfDelegation), proto.delegatorAddress, proto.validatorAddress, PublicKey_1.PublicKey.fromProto(proto.pubkey), Coin_1.Coin.fromProto(proto.value));\n  };\n\n  MsgCreateValidator.prototype.toProto = function () {\n    var _a = this,\n        description = _a.description,\n        commission = _a.commission,\n        min_self_delegation = _a.min_self_delegation,\n        delegator_address = _a.delegator_address,\n        validator_address = _a.validator_address,\n        pubkey = _a.pubkey,\n        value = _a.value;\n\n    return tx_1.MsgCreateValidator.fromPartial({\n      commission: commission.toProto(),\n      delegatorAddress: delegator_address,\n      description: description.toProto(),\n      minSelfDelegation: min_self_delegation.toString(),\n      pubkey: pubkey.packAny(),\n      validatorAddress: validator_address,\n      value: value.toProto()\n    });\n  };\n\n  MsgCreateValidator.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/cosmos.staking.v1beta1.MsgCreateValidator',\n      value: tx_1.MsgCreateValidator.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgCreateValidator.unpackAny = function (msgAny) {\n    return MsgCreateValidator.fromProto(tx_1.MsgCreateValidator.decode(msgAny.value));\n  };\n\n  return MsgCreateValidator;\n}(json_1.JSONSerializable);\n\nexports.MsgCreateValidator = MsgCreateValidator;","map":{"version":3,"mappings":"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","names":["__extends","description","commission","min_self_delegation","delegator_address","validator_address","pubkey","value","_super","_this","MsgCreateValidator","data","Validator_1","CommissionRates","fromAmino","numeric_1","PublicKey_1","Coin_1","type","toAmino","toString","fromData","toData","proto","Description","fromProto","minSelfDelegation","delegatorAddress","validatorAddress","tx_1","fromPartial","toProto","packAny","any_1","typeUrl","encode","finish","msgAny","decode","json_1","exports"],"sources":["../../../../src/core/staking/msgs/MsgCreateValidator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}