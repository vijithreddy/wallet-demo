{"ast":null,"code":"var _jsxFileName = \"/Users/vijithreddybheemireddi/Documents/wallet/wallet-demo/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CoinbaseCloud, Network } from '@coinbase/coinbase-cloud-sdk';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [walletAddress, setWalletAddress] = useState('');\n  const [contractAddress, setContractAddr] = useState('');\n  const [walletScan, setWalletScan] = useState({\n    network: \"\",\n    balance: \"\",\n    latest_block: \"\"\n  });\n  const [table_data, setTableData] = useState([]);\n  ;\n\n  function toFixedValue(value, dp) {\n    return +parseFloat(value).toFixed(dp);\n  }\n\n  function payLoad(walletAddress, contract_list) {\n    var json_date = {};\n    let tmp;\n    var address_contract_list = [];\n\n    for (var i = 0; i < contract_list.length; i++) {\n      tmp = {\n        \"address\": walletAddress,\n        \"contract\": contract_list[i]\n      };\n      address_contract_list.push(tmp);\n    }\n\n    console.log(address_contract_list);\n    return address_contract_list;\n  }\n\n  async function scanWallet() {\n    const endpoint = {\n      url: process.env.REACT_APP_NODE_ENDPOINT,\n      user: process.env.REACT_APP_NODE_USERNAME,\n      password: process.env.REACT_APP_NODE_PASSWORD\n    };\n    const settings = {\n      apiUsername: process.env.REACT_APP_NODE_USERNAME,\n      // You can find this in your Node project's settings\n      apiPassword: process.env.REACT_APP_NODE_PASSWORD,\n      // Password associated with the username\n      network: Network.ETH_MAINNET\n    };\n    /*\n        const cbProvider = new CoinbaseCloud(settings).provider\n    \n        const cb_balance= await cbProvider.getBalance(walletAddress)\n    \n        console.log(\"Balance from CB is\", cb_balance)\n    \n    \n    */\n\n    if (ethers.utils.isAddress(walletAddress)) {\n      const coinbaseCloud = new CoinbaseCloud(settings);\n      const cbProvider = coinbaseCloud.provider;\n      const cb_balances = await coinbaseCloud.advanced.getBalances([{\n        address: walletAddress,\n        contract: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n      }, {\n        address: walletAddress,\n        contract: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n      }]);\n      const cb_balance = await cbProvider.getBalance(walletAddress);\n      console.log(\"Balance from CB is\", ethers.utils.formatEther(cb_balance));\n      const provider = new ethers.providers.JsonRpcProvider(endpoint, 'homestead');\n      const network_obj = await provider.getNetwork();\n      const latest_block = await provider.getBlockNumber();\n      const network = network_obj.name;\n      const preformat_balance = ethers.utils.formatEther(await provider.getBalance(walletAddress));\n      const balance = toFixedValue(preformat_balance, 4);\n      setWalletScan({\n        network,\n        balance,\n        latest_block\n      });\n      console.log(\"network\", walletScan.network);\n      console.log(\"balance\", walletScan.balance);\n      const api_call = \"coinbaseCloud_getBalances\";\n      const contract_list = [\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\", \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"];\n      const contract_params = payLoad(walletAddress, contract_list);\n      const body = JSON.stringify({\n        \"method\": api_call,\n        \"params\": {\n          \"addressAndContractList\": contract_params,\n          \"blockchain\": \"Ethereum\",\n          \"network\": \"Mainnet\"\n        },\n        \"id\": 1,\n        \"jsonrpc\": \"2.0\"\n      });\n      const response = await fetch(\"https://mainnet.ethereum.coinbasecloud.net\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Basic ' + btoa(endpoint.user + \":\" + endpoint.password)\n        },\n        body: body\n      });\n      let response_data = await response.json();\n      let token_balances = response_data.result.balances[0].tokenBalances;\n      let wrappedEthBalance;\n      let apeCoinBalance;\n      let usdcBalance;\n\n      for (const eachTokenBalance in token_balances) {\n        if (token_balances[eachTokenBalance].contract === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n          const preWrappedCoin = token_balances[eachTokenBalance].amount.toString();\n          wrappedEthBalance = ethers.utils.formatUnits(preWrappedCoin, token_balances[eachTokenBalance].decimals);\n          wrappedEthBalance = toFixedValue(wrappedEthBalance, 4);\n        } else if (token_balances[eachTokenBalance].contract === \"0x4d224452801aced8b2f0aebe155379bb5d594381\") {\n          const preApeCoin = token_balances[eachTokenBalance].amount.toString();\n          apeCoinBalance = ethers.utils.formatUnits(preApeCoin, token_balances[eachTokenBalance].decimals);\n          apeCoinBalance = toFixedValue(apeCoinBalance, 4);\n        } else if (token_balances[eachTokenBalance].contract === \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\") {\n          const preusdcBalance = token_balances[eachTokenBalance].amount.toString();\n          usdcBalance = ethers.utils.formatUnits(preusdcBalance, token_balances[eachTokenBalance].decimals);\n          usdcBalance = toFixedValue(usdcBalance, 4);\n        }\n      }\n\n      console.log(\"apecoin\", apeCoinBalance);\n      console.log(\"usdc\", usdcBalance);\n      console.log(\"wrapped\", wrappedEthBalance);\n      const table_data = [{\n        token_name: \"Ethereum\",\n        balance: balance\n      }, {\n        token_name: \"APECoin\",\n        balance: apeCoinBalance\n      }, {\n        token_name: \"Wrapped Ether\",\n        balance: wrappedEthBalance\n      }, {\n        token_name: \"USDC\",\n        balance: usdcBalance\n      }];\n      setTableData(table_data);\n    } else {\n      alert(\"Please enter the correct eth address\");\n    }\n  }\n\n  const setWalletAddr = event => {\n    setWalletAddress(event.target.value);\n  };\n  /*\n  const setContractAddress = event => {\n      setContractAddr(event.target.value);\n    };\n  */\n\n\n  const handleSubmit = event => {\n    event.preventDefault(); // üëáÔ∏è value of input field\n\n    scanWallet();\n    console.log(\"table data is\", typeof table_data);\n    console.log('WalletAddress ', walletAddress);\n  };\n  /*\n    function handleContractSubmit(event) {\n      event.preventDefault();\n      // üëáÔ∏è value of input field\n      console.log('ContractAddress ', contractAddress);\n    }\n  \n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Wallet Address Entered: \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Network Name: \", walletScan.network]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Latest Block: \", walletScan.latest_block]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-style-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wallet Scanner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"walletAddress\",\n            type: \"text\",\n            name: \"walletAddress\",\n            value: walletAddress,\n            onChange: setWalletAddr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Balances: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Token Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Balance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: table_data.map((value, key) => {\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: value.token_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: value.balance\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Transactions: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Points\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Jill\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Smith\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Eve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Jackson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"94\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Adam\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Johnson\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"67\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5ojoBfmMsd2GV9M6mBPlXJ9oEbo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","ethers","CoinbaseCloud","Network","App","walletAddress","setWalletAddress","contractAddress","setContractAddr","walletScan","setWalletScan","network","balance","latest_block","table_data","setTableData","toFixedValue","value","dp","parseFloat","toFixed","payLoad","contract_list","json_date","tmp","address_contract_list","i","length","push","console","log","scanWallet","endpoint","url","process","env","REACT_APP_NODE_ENDPOINT","user","REACT_APP_NODE_USERNAME","password","REACT_APP_NODE_PASSWORD","settings","apiUsername","apiPassword","ETH_MAINNET","utils","isAddress","coinbaseCloud","cbProvider","provider","cb_balances","advanced","getBalances","address","contract","cb_balance","getBalance","formatEther","providers","JsonRpcProvider","network_obj","getNetwork","getBlockNumber","name","preformat_balance","api_call","contract_params","body","JSON","stringify","response","fetch","method","headers","btoa","response_data","json","token_balances","result","balances","tokenBalances","wrappedEthBalance","apeCoinBalance","usdcBalance","eachTokenBalance","preWrappedCoin","amount","toString","formatUnits","decimals","preApeCoin","preusdcBalance","token_name","alert","setWalletAddr","event","target","handleSubmit","preventDefault","map","key"],"sources":["/Users/vijithreddybheemireddi/Documents/wallet/wallet-demo/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { CoinbaseCloud, Network } from '@coinbase/coinbase-cloud-sdk';\nimport './App.css';\n\n\n\nfunction App() {\n  const [walletAddress, setWalletAddress] = useState('');\n  const [contractAddress, setContractAddr] = useState('');\n  const [walletScan, setWalletScan] = useState({\n    network: \"\",\n    balance: \"\",\n    latest_block: \"\"\n  });\n\n  const [table_data, setTableData] = useState([]);;\n\n  function toFixedValue(value, dp) {\n    return +parseFloat(value).toFixed(dp);\n  }\n\nfunction payLoad(walletAddress, contract_list){\n  var json_date={}\n  let tmp;\n  var address_contract_list=[]\n  for (var i = 0; i < contract_list.length; i++) {\n    tmp={ \"address\":walletAddress, \"contract\":contract_list[i]}\n    address_contract_list.push(tmp)\n  } \n  console.log(address_contract_list)\n  return address_contract_list\n}\n\n  async function scanWallet() {\n    const endpoint = {\n      url: process.env.REACT_APP_NODE_ENDPOINT,\n      user: process.env.REACT_APP_NODE_USERNAME,\n      password: process.env.REACT_APP_NODE_PASSWORD,\n    }\n\n    \n    const settings={\n      apiUsername:process.env.REACT_APP_NODE_USERNAME , // You can find this in your Node project's settings\n      apiPassword: process.env.REACT_APP_NODE_PASSWORD, // Password associated with the username\n      network: Network.ETH_MAINNET\n    }\n  \n/*\n    const cbProvider = new CoinbaseCloud(settings).provider\n\n    const cb_balance= await cbProvider.getBalance(walletAddress)\n\n    console.log(\"Balance from CB is\", cb_balance)\n\n\n*/\n\n    if (ethers.utils.isAddress(walletAddress)) {\n\n      const coinbaseCloud = new CoinbaseCloud(settings)\n      const cbProvider = coinbaseCloud.provider\n      \n      const cb_balances= await coinbaseCloud.advanced.getBalances([{\n        address: walletAddress,\n        contract: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"\n      },\n    {\n      address: walletAddress,\n      contract: \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n    }])\n\n\n\n      const cb_balance= await cbProvider.getBalance(walletAddress)\n      console.log(\"Balance from CB is\", ethers.utils.formatEther(cb_balance))\n\n      const provider = new ethers.providers.JsonRpcProvider(endpoint, 'homestead');\n      const network_obj = await provider.getNetwork();\n      const latest_block = await provider.getBlockNumber()\n\n      const network = network_obj.name;\n      const preformat_balance = ethers.utils.formatEther(await provider.getBalance(walletAddress));\n      const balance = toFixedValue(preformat_balance, 4)\n      setWalletScan({\n        network,\n        balance,\n        latest_block\n      });\n\n      console.log(\"network\", walletScan.network)\n      console.log(\"balance\", walletScan.balance)\n\n      const api_call = \"coinbaseCloud_getBalances\";\n      const contract_list = [\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\", \"0x4d224452801ACEd8B2F0aebE155379bb5D594381\", \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"]\n      const contract_params=payLoad(walletAddress, contract_list);\n\n      const body = JSON.stringify({\n        \"method\": api_call,\n        \"params\": {\n          \"addressAndContractList\": contract_params,\n          \"blockchain\": \"Ethereum\",\n          \"network\": \"Mainnet\"\n        },\n        \"id\": 1,\n        \"jsonrpc\": \"2.0\"\n      });\n\n\n\n      const response = await fetch(\"https://mainnet.ethereum.coinbasecloud.net\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Basic ' + btoa(endpoint.user + \":\" + endpoint.password)\n        },\n        body: body,\n      });\n      let response_data = await response.json();\n      let token_balances = response_data.result.balances[0].tokenBalances\n\n      let wrappedEthBalance;\n      let apeCoinBalance;\n      let usdcBalance;\n      for (const eachTokenBalance in token_balances) {\n        if (token_balances[eachTokenBalance].contract === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\n          const preWrappedCoin = token_balances[eachTokenBalance].amount.toString();\n          wrappedEthBalance = ethers.utils.formatUnits(preWrappedCoin, token_balances[eachTokenBalance].decimals);\n          wrappedEthBalance = toFixedValue(wrappedEthBalance, 4);\n        }\n        else if (token_balances[eachTokenBalance].contract === \"0x4d224452801aced8b2f0aebe155379bb5d594381\") {\n          const preApeCoin = token_balances[eachTokenBalance].amount.toString();\n          apeCoinBalance = ethers.utils.formatUnits(preApeCoin, token_balances[eachTokenBalance].decimals);\n          apeCoinBalance = toFixedValue(apeCoinBalance, 4)\n        }\n        else if (token_balances[eachTokenBalance].contract === \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\") {\n          const preusdcBalance = token_balances[eachTokenBalance].amount.toString();\n          usdcBalance = ethers.utils.formatUnits(preusdcBalance, token_balances[eachTokenBalance].decimals);\n          usdcBalance = toFixedValue(usdcBalance, 4)\n        }\n      }\n\n      console.log(\"apecoin\", apeCoinBalance);\n      console.log(\"usdc\", usdcBalance);\n      console.log(\"wrapped\", wrappedEthBalance);\n\n\n\n      const table_data = [\n        { token_name: \"Ethereum\", balance: balance },\n        { token_name: \"APECoin\", balance: apeCoinBalance },\n        { token_name: \"Wrapped Ether\", balance: wrappedEthBalance },\n        { token_name: \"USDC\", balance: usdcBalance }\n      ]\n      setTableData(table_data);\n\n    } else {\n      alert(\"Please enter the correct eth address\");\n    }\n\n\n\n  }\n\n\n  const setWalletAddr = event => {\n    setWalletAddress(event.target.value);\n  };\n  /*\n  const setContractAddress = event => {\n      setContractAddr(event.target.value);\n    };\n  */\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    // üëáÔ∏è value of input field\n    scanWallet();\n    console.log(\"table data is\", typeof (table_data));\n    console.log('WalletAddress ', walletAddress);\n\n  };\n  /*\n    function handleContractSubmit(event) {\n      event.preventDefault();\n      // üëáÔ∏è value of input field\n      console.log('ContractAddress ', contractAddress);\n    }\n  \n  */\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Wallet Address Entered: {walletAddress}</h3>\n        <h3>Network Name: {walletScan.network}</h3>\n        <h4>Latest Block: {walletScan.latest_block}</h4>\n        <div className=\"form-style-6\">\n          <h1>Wallet Scanner</h1>\n          <form onSubmit={handleSubmit}>\n            <input id=\"walletAddress\" type=\"text\" name=\"walletAddress\" value={walletAddress} onChange={setWalletAddr} />\n            <input type=\"submit\" value=\"Send\" />\n          </form>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"column\">\n            <h3> Balances: </h3>\n            <table className=\"styled-table\">\n              <thead>\n                <tr>\n                  <th>Token Name</th>\n                  <th>Balance</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  table_data.map((value, key) => {\n                    return (\n                      <tr key={key}>\n                        <td>{value.token_name}</td>\n                        <td>{value.balance}</td>\n                      </tr>\n                    )\n                  })\n                }\n              </tbody>\n            </table>\n          </div>\n          <div className=\"column\">\n            <h3> Transactions: </h3>\n            <table className=\"styled-table\">\n\n              <thead>\n                <tr>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  <th>Points</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>Jill</td>\n                  <td>Smith</td>\n                  <td>50</td>\n                </tr>\n                <tr>\n                  <td>Eve</td>\n                  <td>Jackson</td>\n                  <td>94</td>\n                </tr>\n                <tr>\n                  <td>Adam</td>\n                  <td>Johnson</td>\n                  <td>67</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}