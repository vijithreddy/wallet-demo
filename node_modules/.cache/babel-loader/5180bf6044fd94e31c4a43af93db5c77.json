{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Coin = void 0;\n\nvar json_1 = require(\"../util/json\");\n\nvar numeric_1 = require(\"./numeric\");\n\nvar coin_1 = require(\"@terra-money/terra.proto/cosmos/base/v1beta1/coin\");\n/**\n * Captures `sdk.Coin` and `sdk.DecCoin` from Cosmos SDK. A composite value that combines\n * a denomination with an amount value. Coins are immutable once created, and operations\n * that return Coin will return a new Coin. See [[Coins]] for a collection of Coin objects.\n */\n\n\nvar Coin =\n/** @class */\nfunction (_super) {\n  __extends(Coin, _super);\n  /**\n   * Creates a new coin. Depending on the type of amount, it will be converted to an\n   * integer coin or decimal coin.\n   *\n   * @param denom denomination\n   * @param amount coin's amount\n   */\n\n\n  function Coin(denom, amount) {\n    var _this = _super.call(this) || this;\n\n    _this.denom = denom;\n    _this.amount = numeric_1.Numeric.parse(amount);\n    return _this;\n  }\n  /**\n   * Checks whether the Coin is an Integer coin.\n   */\n\n\n  Coin.prototype.isIntCoin = function () {\n    // TODO: convert into typeguard\n    return this.amount instanceof numeric_1.Int;\n  };\n  /**\n   * Checks whether the Coin is a Decimal coin.\n   */\n\n\n  Coin.prototype.isDecCoin = function () {\n    return this.amount instanceof numeric_1.Dec;\n  };\n  /**\n   * Turns the Coin into an Integer coin.\n   */\n\n\n  Coin.prototype.toIntCoin = function () {\n    return new Coin(this.denom, new numeric_1.Int(this.amount));\n  };\n  /**\n   * Turns the Coin into an Integer coin with ceiling the amount.\n   */\n\n\n  Coin.prototype.toIntCeilCoin = function () {\n    return new Coin(this.denom, new numeric_1.Int(this.amount.ceil()));\n  };\n  /**\n   * Turns the Coin into a Decimal coin.\n   */\n\n\n  Coin.prototype.toDecCoin = function () {\n    return new Coin(this.denom, new numeric_1.Dec(this.amount));\n  };\n  /**\n   * Outputs `<amount><denom>`.\n   *\n   * Eg: `Coin('uluna', 1500) -> 1500uluna`\n   */\n\n\n  Coin.prototype.toString = function () {\n    var amount = this.amount.toFixed();\n\n    if (this.isDecCoin() && amount.indexOf('.') === -1) {\n      return \"\".concat(amount, \".0\").concat(this.denom);\n    }\n\n    return \"\".concat(amount).concat(this.denom);\n  };\n\n  Coin.fromString = function (str) {\n    var m = str.match(/^(-?[0-9]+(\\.[0-9]+)?)([0-9a-zA-Z/]+)$/);\n\n    if (m === null) {\n      throw new Error(\"failed to parse to Coin: \".concat(str));\n    }\n\n    var amount = m[1];\n    var denom = m[3];\n    return new Coin(denom, amount);\n  };\n  /**\n   * Creates a new Coin adding to the current value.\n   *\n   * @param other\n   */\n\n\n  Coin.prototype.add = function (other) {\n    var otherAmount;\n\n    if (other instanceof Coin) {\n      if (other.denom !== this.denom) {\n        throw new Coin.ArithmeticError(\"cannot add two Coins of different denoms: \".concat(this.denom, \" and \").concat(other.denom));\n      }\n\n      otherAmount = other.amount;\n    } else {\n      otherAmount = other;\n    }\n\n    otherAmount = numeric_1.Numeric.parse(otherAmount);\n    return new Coin(this.denom, this.amount.add(otherAmount));\n  };\n  /**\n   * Creates a new Coin subtracting from the current value.\n   * @param other\n   */\n\n\n  Coin.prototype.sub = function (other) {\n    var otherAmount;\n\n    if (other instanceof Coin) {\n      if (other.denom !== this.denom) {\n        throw new Coin.ArithmeticError(\"cannot subtract two Coins of different denoms: \".concat(this.denom, \" and \").concat(other.denom));\n      }\n\n      otherAmount = other.amount;\n    } else {\n      otherAmount = other;\n    }\n\n    otherAmount = numeric_1.Numeric.parse(otherAmount);\n    return new Coin(this.denom, this.amount.sub(otherAmount));\n  };\n  /**\n   * Multiplies the current value with an amount.\n   * @param other\n   */\n\n\n  Coin.prototype.mul = function (other) {\n    var otherAmount = numeric_1.Numeric.parse(other);\n    return new Coin(this.denom, this.amount.mul(otherAmount));\n  };\n  /**\n   * Divides the current value with an amount.\n   * @param other\n   */\n\n\n  Coin.prototype.div = function (other) {\n    var otherAmount = numeric_1.Numeric.parse(other);\n    return new Coin(this.denom, this.amount.div(otherAmount));\n  };\n  /**\n   * Modulo the current value with an amount.\n   * @param other\n   */\n\n\n  Coin.prototype.mod = function (other) {\n    var otherAmount = numeric_1.Numeric.parse(other);\n    return new Coin(this.denom, this.amount.mod(otherAmount));\n  };\n\n  Coin.fromAmino = function (data) {\n    var denom = data.denom,\n        amount = data.amount;\n    return new Coin(denom, amount);\n  };\n\n  Coin.prototype.toAmino = function () {\n    var _a = this,\n        denom = _a.denom,\n        amount = _a.amount;\n\n    return {\n      denom: denom,\n      amount: amount.toString()\n    };\n  };\n\n  Coin.fromData = function (data) {\n    var denom = data.denom,\n        amount = data.amount;\n    return new Coin(denom, amount);\n  };\n\n  Coin.prototype.toData = function () {\n    var _a = this,\n        denom = _a.denom,\n        amount = _a.amount;\n\n    return {\n      denom: denom,\n      amount: amount.toString()\n    };\n  };\n\n  Coin.fromProto = function (proto) {\n    return new Coin(proto.denom, numeric_1.Numeric.parse(proto.amount));\n  };\n\n  Coin.prototype.toProto = function () {\n    return coin_1.Coin.fromPartial({\n      denom: this.denom,\n      amount: this.amount.toString()\n    });\n  };\n\n  return Coin;\n}(json_1.JSONSerializable);\n\nexports.Coin = Coin;\n\n(function (Coin) {\n  var ArithmeticError =\n  /** @class */\n  function () {\n    function ArithmeticError(message) {\n      this.message = message;\n    }\n\n    return ArithmeticError;\n  }();\n\n  Coin.ArithmeticError = ArithmeticError;\n})(Coin = exports.Coin || (exports.Coin = {}));\n\nexports.Coin = Coin;","map":{"version":3,"mappings":"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","names":["__extends","denom","amount","_super","_this","numeric_1","parse","Coin","ceil","toFixed","isDecCoin","indexOf","concat","str","m","match","Error","other","otherAmount","ArithmeticError","add","sub","mul","div","mod","data","toString","proto","coin_1","fromPartial","json_1","exports","message"],"sources":["../../src/core/Coin.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}