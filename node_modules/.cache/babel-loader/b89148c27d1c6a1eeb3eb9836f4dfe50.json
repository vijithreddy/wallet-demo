{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgConnectionOpenTry = void 0;\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar any_1 = require(\"@terra-money/terra.proto/google/protobuf/any\");\n\nvar Counterparty_1 = require(\"./Counterparty\");\n\nvar Version_1 = require(\"./Version\");\n\nvar tx_1 = require(\"@terra-money/terra.proto/ibc/core/connection/v1/tx\");\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar Height_1 = require(\"../client/Height\");\n/**\n *  MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a connection on Chain B.\n */\n\n\nvar MsgConnectionOpenTry =\n/** @class */\nfunction (_super) {\n  __extends(MsgConnectionOpenTry, _super);\n  /**\n   * @param client_id in the case of crossing hello's, when both chains call OpenInit, we need the connection identifier of the previous connection in state INIT\n   * @param previous_connection_id\n   * @param client_state\n   * @param counterparty\n   * @param delay_period\n   * @param counterparty_versions\n   * @param proof_height proof of the initialization the connection on Chain A: `UNITIALIZED -> INIT`\n   * @param proof_init proof of client state included in message\n   * @param proof_client proof of client consensus state\n   * @param proof_consensus\n   * @param consensus_height\n   * @param signer signer address\n   */\n\n\n  function MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty, delay_period, counterparty_versions, proof_height, proof_init, proof_client, proof_consensus, consensus_height, signer) {\n    var _this = _super.call(this) || this;\n\n    _this.client_id = client_id;\n    _this.previous_connection_id = previous_connection_id;\n    _this.client_state = client_state;\n    _this.counterparty = counterparty;\n    _this.delay_period = delay_period;\n    _this.counterparty_versions = counterparty_versions;\n    _this.proof_height = proof_height;\n    _this.proof_init = proof_init;\n    _this.proof_client = proof_client;\n    _this.proof_consensus = proof_consensus;\n    _this.consensus_height = consensus_height;\n    _this.signer = signer;\n    return _this;\n  }\n\n  MsgConnectionOpenTry.fromAmino = function (_) {\n    _;\n    throw new Error('Amino not supported');\n  };\n\n  MsgConnectionOpenTry.prototype.toAmino = function () {\n    throw new Error('Amino not supported');\n  };\n\n  MsgConnectionOpenTry.fromData = function (data) {\n    var client_id = data.client_id,\n        previous_connection_id = data.previous_connection_id,\n        client_state = data.client_state,\n        counterparty = data.counterparty,\n        delay_period = data.delay_period,\n        counterparty_versions = data.counterparty_versions,\n        proof_height = data.proof_height,\n        proof_init = data.proof_init,\n        proof_client = data.proof_client,\n        proof_consensus = data.proof_consensus,\n        consensus_height = data.consensus_height,\n        signer = data.signer;\n    return new MsgConnectionOpenTry(client_id, previous_connection_id, client_state, counterparty ? Counterparty_1.Counterparty.fromData(counterparty) : undefined, Number.parseInt(delay_period), counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n      return Version_1.Version.fromData(cv);\n    }) : [], proof_height ? Height_1.Height.fromData(proof_height) : undefined, Buffer.from(proof_init).toString('base64'), Buffer.from(proof_client).toString('base64'), Buffer.from(proof_consensus).toString('base64'), consensus_height ? Height_1.Height.fromData(consensus_height) : undefined, signer);\n  };\n\n  MsgConnectionOpenTry.prototype.toData = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        previous_connection_id = _a.previous_connection_id,\n        client_state = _a.client_state,\n        counterparty = _a.counterparty,\n        delay_period = _a.delay_period,\n        counterparty_versions = _a.counterparty_versions,\n        proof_height = _a.proof_height,\n        proof_init = _a.proof_init,\n        proof_client = _a.proof_client,\n        proof_consensus = _a.proof_consensus,\n        consensus_height = _a.consensus_height,\n        signer = _a.signer;\n\n    return {\n      '@type': '/ibc.core.connection.v1.MsgConnectionOpenTry',\n      client_id: client_id,\n      previous_connection_id: previous_connection_id,\n      client_state: client_state,\n      counterparty: counterparty ? counterparty.toData() : undefined,\n      delay_period: delay_period.toFixed(),\n      counterparty_versions: counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n        return cv.toData();\n      }) : [],\n      proof_height: proof_height ? proof_height.toData() : undefined,\n      proof_init: proof_init,\n      proof_client: proof_client,\n      proof_consensus: proof_consensus,\n      consensus_height: consensus_height ? consensus_height.toData() : undefined,\n      signer: signer\n    };\n  };\n\n  MsgConnectionOpenTry.fromProto = function (proto) {\n    return new MsgConnectionOpenTry(proto.clientId, proto.previousConnectionId, proto.clientState, proto.counterparty ? Counterparty_1.Counterparty.fromProto(proto.counterparty) : undefined, proto.delayPeriod.toNumber(), proto.counterpartyVersions.length > 0 ? proto.counterpartyVersions.map(function (cv) {\n      return Version_1.Version.fromProto(cv);\n    }) : [], proto.proofHeight ? Height_1.Height.fromProto(proto.proofHeight) : undefined, Buffer.from(proto.proofInit).toString('base64'), Buffer.from(proto.proofClient).toString('base64'), Buffer.from(proto.proofConsensus).toString('base64'), proto.consensusHeight ? Height_1.Height.fromProto(proto.consensusHeight) : undefined, proto.signer);\n  };\n\n  MsgConnectionOpenTry.prototype.toProto = function () {\n    var _a = this,\n        client_id = _a.client_id,\n        previous_connection_id = _a.previous_connection_id,\n        client_state = _a.client_state,\n        counterparty = _a.counterparty,\n        delay_period = _a.delay_period,\n        counterparty_versions = _a.counterparty_versions,\n        proof_height = _a.proof_height,\n        proof_init = _a.proof_init,\n        proof_client = _a.proof_client,\n        proof_consensus = _a.proof_consensus,\n        consensus_height = _a.consensus_height,\n        signer = _a.signer;\n\n    return tx_1.MsgConnectionOpenTry.fromPartial({\n      clientId: client_id,\n      previousConnectionId: previous_connection_id,\n      clientState: client_state.toProto(),\n      counterparty: counterparty ? counterparty.toProto() : undefined,\n      delayPeriod: long_1.default.fromNumber(delay_period),\n      counterpartyVersions: counterparty_versions.length > 0 ? counterparty_versions.map(function (cv) {\n        return cv.toProto();\n      }) : [],\n      proofHeight: proof_height ? proof_height.toProto() : undefined,\n      proofInit: Buffer.from(proof_init, 'base64'),\n      proofClient: Buffer.from(proof_client, 'base64'),\n      proofConsensus: Buffer.from(proof_consensus, 'base64'),\n      consensusHeight: consensus_height ? consensus_height.toProto() : undefined,\n      signer: signer\n    });\n  };\n\n  MsgConnectionOpenTry.prototype.packAny = function () {\n    return any_1.Any.fromPartial({\n      typeUrl: '/ibc.core.connection.v1.MsgConnectionOpenTry',\n      value: tx_1.MsgConnectionOpenTry.encode(this.toProto()).finish()\n    });\n  };\n\n  MsgConnectionOpenTry.unpackAny = function (msgAny) {\n    return MsgConnectionOpenTry.fromProto(tx_1.MsgConnectionOpenTry.decode(msgAny.value));\n  };\n\n  return MsgConnectionOpenTry;\n}(json_1.JSONSerializable);\n\nexports.MsgConnectionOpenTry = MsgConnectionOpenTry;","map":{"version":3,"mappings":"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","names":["__extends","client_id","previous_connection_id","client_state","counterparty","delay_period","counterparty_versions","proof_height","proof_init","proof_client","proof_consensus","consensus_height","signer","_super","_this","MsgConnectionOpenTry","_","Error","data","Counterparty_1","fromData","undefined","Number","parseInt","length","map","cv","Height_1","Buffer","from","toString","toData","toFixed","proto","clientId","previousConnectionId","clientState","fromProto","delayPeriod","toNumber","counterpartyVersions","proofHeight","proofInit","proofClient","proofConsensus","consensusHeight","tx_1","fromPartial","toProto","long_1","fromNumber","any_1","typeUrl","value","encode","finish","msgAny","decode","json_1","exports"],"sources":["../../../../../src/core/ibc/msgs/connection/MsgConnectionOpenTry.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}