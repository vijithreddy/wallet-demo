{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Wallet = void 0;\n\nvar signing_1 = require(\"@terra-money/terra.proto/cosmos/tx/signing/v1beta1/signing\");\n\nvar Wallet =\n/** @class */\nfunction () {\n  function Wallet(lcd, key) {\n    this.lcd = lcd;\n    this.key = key;\n  }\n\n  Wallet.prototype.accountNumberAndSequence = function () {\n    return this.lcd.auth.accountInfo(this.key.accAddress).then(function (d) {\n      return {\n        account_number: d.getAccountNumber(),\n        sequence: d.getSequenceNumber()\n      };\n    });\n  };\n\n  Wallet.prototype.accountNumber = function () {\n    return this.lcd.auth.accountInfo(this.key.accAddress).then(function (d) {\n      return d.getAccountNumber();\n    });\n  };\n\n  Wallet.prototype.sequence = function () {\n    return this.lcd.auth.accountInfo(this.key.accAddress).then(function (d) {\n      return d.getSequenceNumber();\n    });\n  };\n\n  Wallet.prototype.createTx = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this.lcd.tx.create([{\n          address: this.key.accAddress,\n          sequenceNumber: options.sequence,\n          publicKey: this.key.publicKey\n        }], options)];\n      });\n    });\n  };\n\n  Wallet.prototype.createAndSignTx = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var accountNumber, sequence, res, tx;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            accountNumber = options.accountNumber;\n            sequence = options.sequence;\n            if (!(accountNumber === undefined || sequence == undefined)) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.accountNumberAndSequence()];\n\n          case 1:\n            res = _a.sent();\n\n            if (accountNumber === undefined) {\n              accountNumber = res.account_number;\n            }\n\n            if (sequence === undefined) {\n              sequence = res.sequence;\n            }\n\n            _a.label = 2;\n\n          case 2:\n            options.sequence = sequence;\n            options.accountNumber = accountNumber;\n            return [4\n            /*yield*/\n            , this.createTx(options)];\n\n          case 3:\n            tx = _a.sent();\n            return [2\n            /*return*/\n            , this.key.signTx(tx, {\n              accountNumber: accountNumber,\n              sequence: sequence,\n              chainID: this.lcd.config.chainID,\n              signMode: options.signMode || signing_1.SignMode.SIGN_MODE_DIRECT\n            })];\n        }\n      });\n    });\n  };\n\n  return Wallet;\n}();\n\nexports.Wallet = Wallet;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;AAEA;AAAA;AAAA;EACE,gBAAmBA,GAAnB,EAA0CC,GAA1C,EAAkD;IAA/B;IAAuB;EAAY;;EAE/CC,4CAAP;IAIE,OAAO,KAAKF,GAAL,CAASG,IAAT,CAAcC,WAAd,CAA0B,KAAKH,GAAL,CAASI,UAAnC,EAA+CC,IAA/C,CAAoD,aAAC;MAC1D,OAAO;QACLC,cAAc,EAAEC,CAAC,CAACC,gBAAF,EADX;QAELC,QAAQ,EAAEF,CAAC,CAACG,iBAAF;MAFL,CAAP;IAID,CALM,CAAP;EAMD,CAVM;;EAYAT,iCAAP;IACE,OAAO,KAAKF,GAAL,CAASG,IAAT,CAAcC,WAAd,CAA0B,KAAKH,GAAL,CAASI,UAAnC,EAA+CC,IAA/C,CAAoD,aAAC;MAC1D,OAAOE,CAAC,CAACC,gBAAF,EAAP;IACD,CAFM,CAAP;EAGD,CAJM;;EAMAP,4BAAP;IACE,OAAO,KAAKF,GAAL,CAASG,IAAT,CAAcC,WAAd,CAA0B,KAAKH,GAAL,CAASI,UAAnC,EAA+CC,IAA/C,CAAoD,aAAC;MAC1D,OAAOE,CAAC,CAACG,iBAAF,EAAP;IACD,CAFM,CAAP;EAGD,CAJM;;EAMMT,4BAAb,UACEU,OADF,EAGG;;;QAED;QAAA;QAAA,EAAO,KAAKZ,GAAL,CAASa,EAAT,CAAYC,MAAZ,CACL,CACE;UACEC,OAAO,EAAE,KAAKd,GAAL,CAASI,UADpB;UAEEW,cAAc,EAAEJ,OAAO,CAACF,QAF1B;UAGEO,SAAS,EAAE,KAAKhB,GAAL,CAASgB;QAHtB,CADF,CADK,EAQLL,OARK,CAAP;;;EAUD,CAfY;;EAiBAV,mCAAb,UACEU,OADF,EAKG;;;;;;YAEGM,aAAa,GAAGN,OAAO,CAACM,aAAxB;YACAR,QAAQ,GAAGE,OAAO,CAACF,QAAnB;kBAEAQ,aAAa,KAAKC,SAAlB,IAA+BT,QAAQ,IAAIS,YAA3C;YAAA;YAAA;YACU;YAAA;YAAA,EAAM,KAAKC,wBAAL,EAAN;;;YAANC,GAAG,GAAGC,SAAN;;YACN,IAAIJ,aAAa,KAAKC,SAAtB,EAAiC;cAC/BD,aAAa,GAAGG,GAAG,CAACd,cAApB;YACD;;YAED,IAAIG,QAAQ,KAAKS,SAAjB,EAA4B;cAC1BT,QAAQ,GAAGW,GAAG,CAACX,QAAf;YACD;;;;;YAGHE,OAAO,CAACF,QAAR,GAAmBA,QAAnB;YACAE,OAAO,CAACM,aAAR,GAAwBA,aAAxB;YAEW;YAAA;YAAA,EAAM,KAAKK,QAAL,CAAcX,OAAd,CAAN;;;YAALC,EAAE,GAAGS,SAAL;YACN;YAAA;YAAA,EAAO,KAAKrB,GAAL,CAASuB,MAAT,CAAgBX,EAAhB,EAAoB;cACzBK,aAAa,eADY;cAEzBR,QAAQ,UAFiB;cAGzBe,OAAO,EAAE,KAAKzB,GAAL,CAAS0B,MAAT,CAAgBD,OAHA;cAIzBE,QAAQ,EAAEf,OAAO,CAACe,QAAR,IAAoBC,mBAASC;YAJd,CAApB,CAAP;;;;EAMD,CA/BY;;EAgCf;AAAC,CA5ED;;AAAaC","names":["lcd","key","Wallet","auth","accountInfo","accAddress","then","account_number","d","getAccountNumber","sequence","getSequenceNumber","options","tx","create","address","sequenceNumber","publicKey","accountNumber","undefined","accountNumberAndSequence","res","_a","createTx","signTx","chainID","config","signMode","signing_1","SIGN_MODE_DIRECT","exports"],"sources":["../../../src/client/lcd/Wallet.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}