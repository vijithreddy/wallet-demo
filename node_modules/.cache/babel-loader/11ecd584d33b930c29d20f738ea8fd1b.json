{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExchangeRateTuple = exports.AggregateExchangeRateVote = void 0;\n\nvar json_1 = require(\"../../util/json\");\n\nvar oracle_1 = require(\"@terra-money/terra.proto/terra/oracle/v1beta1/oracle\");\n\nvar numeric_1 = require(\"../numeric\");\n/**\n * Stores information about data about Oracle aggregate vote fetched from the blockchain.\n */\n\n\nvar AggregateExchangeRateVote =\n/** @class */\nfunction (_super) {\n  __extends(AggregateExchangeRateVote, _super);\n  /**\n   * @param exchange_rate_tuples exchange rates for LUNA\n   * @param voter validator\n   */\n\n\n  function AggregateExchangeRateVote(exchange_rate_tuples, voter) {\n    var _this = _super.call(this) || this;\n\n    _this.exchange_rate_tuples = exchange_rate_tuples;\n    _this.voter = voter;\n    return _this;\n  }\n\n  AggregateExchangeRateVote.fromAmino = function (data) {\n    var exchange_rate_tuples = data.exchange_rate_tuples,\n        voter = data.voter;\n    return new AggregateExchangeRateVote(exchange_rate_tuples.map(function (t) {\n      return ExchangeRateTuple.fromAmino(t);\n    }), voter);\n  };\n\n  AggregateExchangeRateVote.prototype.toAmino = function () {\n    var _a = this,\n        exchange_rate_tuples = _a.exchange_rate_tuples,\n        voter = _a.voter;\n\n    return {\n      exchange_rate_tuples: exchange_rate_tuples.map(function (e) {\n        return e.toAmino();\n      }),\n      voter: voter\n    };\n  };\n\n  AggregateExchangeRateVote.fromData = function (data) {\n    var exchange_rate_tuples = data.exchange_rate_tuples,\n        voter = data.voter;\n    return new AggregateExchangeRateVote(exchange_rate_tuples.map(function (t) {\n      return ExchangeRateTuple.fromData(t);\n    }), voter);\n  };\n\n  AggregateExchangeRateVote.prototype.toData = function () {\n    var _a = this,\n        exchange_rate_tuples = _a.exchange_rate_tuples,\n        voter = _a.voter;\n\n    return {\n      exchange_rate_tuples: exchange_rate_tuples.map(function (e) {\n        return e.toData();\n      }),\n      voter: voter\n    };\n  };\n\n  AggregateExchangeRateVote.fromProto = function (data) {\n    return new AggregateExchangeRateVote(data.exchangeRateTuples.map(function (t) {\n      return ExchangeRateTuple.fromProto(t);\n    }), data.voter);\n  };\n\n  AggregateExchangeRateVote.prototype.toProto = function () {\n    var _a = this,\n        exchange_rate_tuples = _a.exchange_rate_tuples,\n        voter = _a.voter;\n\n    return oracle_1.AggregateExchangeRateVote.fromPartial({\n      exchangeRateTuples: exchange_rate_tuples.map(function (t) {\n        return t.toProto();\n      }),\n      voter: voter\n    });\n  };\n\n  return AggregateExchangeRateVote;\n}(json_1.JSONSerializable);\n\nexports.AggregateExchangeRateVote = AggregateExchangeRateVote;\n\nvar ExchangeRateTuple =\n/** @class */\nfunction (_super) {\n  __extends(ExchangeRateTuple, _super);\n\n  function ExchangeRateTuple(denom, exchange_rate) {\n    var _this = _super.call(this) || this;\n\n    _this.denom = denom;\n    _this.exchange_rate = new numeric_1.Dec(exchange_rate);\n    return _this;\n  }\n\n  ExchangeRateTuple.fromAmino = function (data) {\n    var denom = data.denom,\n        exchange_rate = data.exchange_rate;\n    return new ExchangeRateTuple(denom, exchange_rate);\n  };\n\n  ExchangeRateTuple.prototype.toAmino = function () {\n    var _a = this,\n        denom = _a.denom,\n        exchange_rate = _a.exchange_rate;\n\n    return {\n      denom: denom,\n      exchange_rate: exchange_rate.toString()\n    };\n  };\n\n  ExchangeRateTuple.fromData = function (data) {\n    var denom = data.denom,\n        exchange_rate = data.exchange_rate;\n    return new ExchangeRateTuple(denom, exchange_rate);\n  };\n\n  ExchangeRateTuple.prototype.toData = function () {\n    var _a = this,\n        denom = _a.denom,\n        exchange_rate = _a.exchange_rate;\n\n    return {\n      denom: denom,\n      exchange_rate: exchange_rate.toString()\n    };\n  };\n\n  ExchangeRateTuple.fromProto = function (proto) {\n    return new ExchangeRateTuple(proto.denom, proto.exchangeRate);\n  };\n\n  ExchangeRateTuple.prototype.toProto = function () {\n    var _a = this,\n        denom = _a.denom,\n        exchange_rate = _a.exchange_rate;\n\n    return oracle_1.ExchangeRateTuple.fromPartial({\n      denom: denom,\n      exchangeRate: exchange_rate.toString()\n    });\n  };\n\n  return ExchangeRateTuple;\n}(json_1.JSONSerializable);\n\nexports.ExchangeRateTuple = ExchangeRateTuple;","map":{"version":3,"mappings":"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","names":["__extends","exchange_rate_tuples","voter","_super","_this","AggregateExchangeRateVote","data","map","fromAmino","t","toAmino","fromData","toData","exchangeRateTuples","fromProto","oracle_1","fromPartial","toProto","json_1","exports","denom","exchange_rate","numeric_1","ExchangeRateTuple","toString","proto","exchangeRate"],"sources":["../../../src/core/oracle/AggregateExchangeRateVote.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}