{"ast":null,"code":"var ERRORS = require('./errors');\n\nvar NATIVE = require('./native'); // short-hand\n\n\nvar tfJSON = ERRORS.tfJSON;\nvar TfTypeError = ERRORS.TfTypeError;\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError;\nvar tfSubError = ERRORS.tfSubError;\nvar getValueTypeName = ERRORS.getValueTypeName;\nvar TYPES = {\n  arrayOf: function arrayOf(type, options) {\n    type = compile(type);\n    options = options || {};\n\n    function _arrayOf(array, strict) {\n      if (!NATIVE.Array(array)) return false;\n      if (NATIVE.Nil(array)) return false;\n      if (options.minLength !== undefined && array.length < options.minLength) return false;\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false;\n      if (options.length !== undefined && array.length !== options.length) return false;\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict);\n        } catch (e) {\n          throw tfSubError(e, i);\n        }\n      });\n    }\n\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']';\n\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}';\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' + (options.minLength === undefined ? 0 : options.minLength) + ',' + (options.maxLength === undefined ? Infinity : options.maxLength) + '}';\n      }\n\n      return str;\n    };\n\n    return _arrayOf;\n  },\n  maybe: function maybe(type) {\n    type = compile(type);\n\n    function _maybe(value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe);\n    }\n\n    _maybe.toJSON = function () {\n      return '?' + tfJSON(type);\n    };\n\n    return _maybe;\n  },\n  map: function map(propertyType, propertyKeyType) {\n    propertyType = compile(propertyType);\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType);\n\n    function _map(value, strict) {\n      if (!NATIVE.Object(value)) return false;\n      if (NATIVE.Nil(value)) return false;\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict);\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key');\n        }\n\n        try {\n          var propertyValue = value[propertyName];\n          typeforce(propertyType, propertyValue, strict);\n        } catch (e) {\n          throw tfSubError(e, propertyName);\n        }\n      }\n\n      return true;\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}';\n      };\n    } else {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyType) + '}';\n      };\n    }\n\n    return _map;\n  },\n  object: function object(uncompiled) {\n    var type = {};\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName]);\n    }\n\n    function _object(value, strict) {\n      if (!NATIVE.Object(value)) return false;\n      if (NATIVE.Nil(value)) return false;\n      var propertyName;\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName];\n          var propertyValue = value[propertyName];\n          typeforce(propertyType, propertyValue, strict);\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName);\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue;\n          throw new TfPropertyTypeError(undefined, propertyName);\n        }\n      }\n\n      return true;\n    }\n\n    _object.toJSON = function () {\n      return tfJSON(type);\n    };\n\n    return _object;\n  },\n  anyOf: function anyOf() {\n    var types = [].slice.call(arguments).map(compile);\n\n    function _anyOf(value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict);\n        } catch (e) {\n          return false;\n        }\n      });\n    }\n\n    _anyOf.toJSON = function () {\n      return types.map(tfJSON).join('|');\n    };\n\n    return _anyOf;\n  },\n  allOf: function allOf() {\n    var types = [].slice.call(arguments).map(compile);\n\n    function _allOf(value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict);\n        } catch (e) {\n          return false;\n        }\n      });\n    }\n\n    _allOf.toJSON = function () {\n      return types.map(tfJSON).join(' & ');\n    };\n\n    return _allOf;\n  },\n  quacksLike: function quacksLike(type) {\n    function _quacksLike(value) {\n      return type === getValueTypeName(value);\n    }\n\n    _quacksLike.toJSON = function () {\n      return type;\n    };\n\n    return _quacksLike;\n  },\n  tuple: function tuple() {\n    var types = [].slice.call(arguments).map(compile);\n\n    function _tuple(values, strict) {\n      if (NATIVE.Nil(values)) return false;\n      if (NATIVE.Nil(values.length)) return false;\n      if (strict && values.length !== types.length) return false;\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict);\n        } catch (e) {\n          throw tfSubError(e, i);\n        }\n      });\n    }\n\n    _tuple.toJSON = function () {\n      return '(' + types.map(tfJSON).join(', ') + ')';\n    };\n\n    return _tuple;\n  },\n  value: function value(expected) {\n    function _value(actual) {\n      return actual === expected;\n    }\n\n    _value.toJSON = function () {\n      return expected;\n    };\n\n    return _value;\n  }\n}; // TODO: deprecate\n\nTYPES.oneOf = TYPES.anyOf;\n\nfunction compile(type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1));\n    return NATIVE[type] || TYPES.quacksLike(type);\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1');\n      return TYPES.arrayOf(type[0]);\n    }\n\n    return TYPES.object(type);\n  } else if (NATIVE.Function(type)) {\n    return type;\n  }\n\n  return TYPES.value(type);\n}\n\nfunction typeforce(type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true;\n    throw new TfTypeError(surrogate || type, value);\n  } // JIT\n\n\n  return typeforce(compile(type), value, strict);\n} // assign types to typeforce function\n\n\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName];\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName];\n}\n\nvar EXTRA = require('./extra');\n\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName];\n}\n\ntypeforce.compile = compile;\ntypeforce.TfTypeError = TfTypeError;\ntypeforce.TfPropertyTypeError = TfPropertyTypeError;\nmodule.exports = typeforce;","map":{"version":3,"names":["ERRORS","require","NATIVE","tfJSON","TfTypeError","TfPropertyTypeError","tfSubError","getValueTypeName","TYPES","arrayOf","type","options","compile","_arrayOf","array","strict","Array","Nil","minLength","undefined","length","maxLength","every","value","i","typeforce","e","toJSON","str","Infinity","maybe","_maybe","map","propertyType","propertyKeyType","_map","Object","propertyName","propertyValue","object","uncompiled","typePropertyName","_object","anyOf","types","slice","call","arguments","_anyOf","some","join","allOf","_allOf","quacksLike","_quacksLike","tuple","_tuple","values","expected","_value","actual","oneOf","String","TypeError","Function","surrogate","typeName","EXTRA","module","exports"],"sources":["/Users/vijithreddybheemireddi/node_modules/typeforce/index.js"],"sourcesContent":["var ERRORS = require('./errors')\nvar NATIVE = require('./native')\n\n// short-hand\nvar tfJSON = ERRORS.tfJSON\nvar TfTypeError = ERRORS.TfTypeError\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError\nvar tfSubError = ERRORS.tfSubError\nvar getValueTypeName = ERRORS.getValueTypeName\n\nvar TYPES = {\n  arrayOf: function arrayOf (type, options) {\n    type = compile(type)\n    options = options || {}\n\n    function _arrayOf (array, strict) {\n      if (!NATIVE.Array(array)) return false\n      if (NATIVE.Nil(array)) return false\n      if (options.minLength !== undefined && array.length < options.minLength) return false\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false\n      if (options.length !== undefined && array.length !== options.length) return false\n\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']'\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}'\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' +\n          (options.minLength === undefined ? 0 : options.minLength) + ',' +\n          (options.maxLength === undefined ? Infinity : options.maxLength) + '}'\n      }\n      return str\n    }\n\n    return _arrayOf\n  },\n\n  maybe: function maybe (type) {\n    type = compile(type)\n\n    function _maybe (value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe)\n    }\n    _maybe.toJSON = function () { return '?' + tfJSON(type) }\n\n    return _maybe\n  },\n\n  map: function map (propertyType, propertyKeyType) {\n    propertyType = compile(propertyType)\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType)\n\n    function _map (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict)\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key')\n        }\n\n        try {\n          var propertyValue = value[propertyName]\n          typeforce(propertyType, propertyValue, strict)\n        } catch (e) {\n          throw tfSubError(e, propertyName)\n        }\n      }\n\n      return true\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}'\n      }\n    } else {\n      _map.toJSON = function () { return '{' + tfJSON(propertyType) + '}' }\n    }\n\n    return _map\n  },\n\n  object: function object (uncompiled) {\n    var type = {}\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName])\n    }\n\n    function _object (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      var propertyName\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName]\n          var propertyValue = value[propertyName]\n\n          typeforce(propertyType, propertyValue, strict)\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName)\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue\n\n          throw new TfPropertyTypeError(undefined, propertyName)\n        }\n      }\n\n      return true\n    }\n    _object.toJSON = function () { return tfJSON(type) }\n\n    return _object\n  },\n\n  anyOf: function anyOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _anyOf (value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _anyOf.toJSON = function () { return types.map(tfJSON).join('|') }\n\n    return _anyOf\n  },\n\n  allOf: function allOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _allOf (value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _allOf.toJSON = function () { return types.map(tfJSON).join(' & ') }\n\n    return _allOf\n  },\n\n  quacksLike: function quacksLike (type) {\n    function _quacksLike (value) {\n      return type === getValueTypeName(value)\n    }\n    _quacksLike.toJSON = function () { return type }\n\n    return _quacksLike\n  },\n\n  tuple: function tuple () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _tuple (values, strict) {\n      if (NATIVE.Nil(values)) return false\n      if (NATIVE.Nil(values.length)) return false\n      if (strict && (values.length !== types.length)) return false\n\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _tuple.toJSON = function () { return '(' + types.map(tfJSON).join(', ') + ')' }\n\n    return _tuple\n  },\n\n  value: function value (expected) {\n    function _value (actual) {\n      return actual === expected\n    }\n    _value.toJSON = function () { return expected }\n\n    return _value\n  }\n}\n\n// TODO: deprecate\nTYPES.oneOf = TYPES.anyOf\n\nfunction compile (type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1))\n\n    return NATIVE[type] || TYPES.quacksLike(type)\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1')\n      return TYPES.arrayOf(type[0])\n    }\n\n    return TYPES.object(type)\n  } else if (NATIVE.Function(type)) {\n    return type\n  }\n\n  return TYPES.value(type)\n}\n\nfunction typeforce (type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true\n\n    throw new TfTypeError(surrogate || type, value)\n  }\n\n  // JIT\n  return typeforce(compile(type), value, strict)\n}\n\n// assign types to typeforce function\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName]\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName]\n}\n\nvar EXTRA = require('./extra')\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName]\n}\n\ntypeforce.compile = compile\ntypeforce.TfTypeError = TfTypeError\ntypeforce.TfPropertyTypeError = TfPropertyTypeError\n\nmodule.exports = typeforce\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}