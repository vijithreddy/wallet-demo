{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Channel = void 0;\n\nvar channel_1 = require(\"@terra-money/terra.proto/ibc/core/channel/v1/channel\");\n\nvar json_1 = require(\"../../../../util/json\");\n\nvar Counterparty_1 = require(\"./Counterparty\");\n/**\n * Channel is a monotonically increasing data type\n * that can be compared against another Channel for the purposes of updating and\n * freezing clients\n *\n * Normally the RevisionChannel is incremented at each height while keeping\n * RevisionNumber the same. However some consensus algorithms may choose to\n * reset the height in certain conditions e.g. hard forks, state-machine\n * breaking changes In these cases, the RevisionNumber is incremented so that\n * height continues to be monitonically increasing even as the RevisionChannel\n * gets reset\n */\n\n\nvar Channel =\n/** @class */\nfunction (_super) {\n  __extends(Channel, _super);\n  /**\n   * @param state current state of the channel end\n   * @param ordering  whether the channel is ordered or unordered\n   * @param counterparty counterparty channel end\n   * @param connection_hops list of connection identifiers, in order, along which packets sent on this channel will travel\n   * @param version opaque channel version, which is agreed upon during the handshake\n   */\n\n\n  function Channel(state, ordering, counterparty, connection_hops, version) {\n    var _this = _super.call(this) || this;\n\n    _this.state = state;\n    _this.ordering = ordering;\n    _this.counterparty = counterparty;\n    _this.connection_hops = connection_hops;\n    _this.version = version;\n    return _this;\n  }\n\n  Channel.fromAmino = function (data) {\n    var state = data.state,\n        ordering = data.ordering,\n        counterparty = data.counterparty,\n        connection_hops = data.connection_hops,\n        version = data.version;\n    return new Channel(state, ordering, counterparty ? Counterparty_1.Counterparty.fromAmino(counterparty) : undefined, connection_hops, version);\n  };\n\n  Channel.prototype.toAmino = function () {\n    var _a = this,\n        state = _a.state,\n        ordering = _a.ordering,\n        counterparty = _a.counterparty,\n        connection_hops = _a.connection_hops,\n        version = _a.version;\n\n    var res = {\n      state: state,\n      ordering: ordering,\n      counterparty: counterparty ? counterparty.toAmino() : undefined,\n      connection_hops: connection_hops,\n      version: version\n    };\n    return res;\n  };\n\n  Channel.fromData = function (data) {\n    var state = data.state,\n        ordering = data.ordering,\n        counterparty = data.counterparty,\n        connection_hops = data.connection_hops,\n        version = data.version;\n    return new Channel(state, ordering, counterparty ? Counterparty_1.Counterparty.fromData(counterparty) : undefined, connection_hops, version);\n  };\n\n  Channel.prototype.toData = function () {\n    var _a = this,\n        state = _a.state,\n        ordering = _a.ordering,\n        counterparty = _a.counterparty,\n        connection_hops = _a.connection_hops,\n        version = _a.version;\n\n    var res = {\n      state: state,\n      ordering: ordering,\n      counterparty: counterparty ? counterparty.toData() : undefined,\n      connection_hops: connection_hops,\n      version: version\n    };\n    return res;\n  };\n\n  Channel.fromProto = function (proto) {\n    return new Channel(proto.state, proto.ordering, proto.counterparty ? Counterparty_1.Counterparty.fromProto(proto.counterparty) : undefined, proto.connectionHops, proto.version);\n  };\n\n  Channel.prototype.toProto = function () {\n    var _a = this,\n        state = _a.state,\n        ordering = _a.ordering,\n        counterparty = _a.counterparty,\n        connection_hops = _a.connection_hops,\n        version = _a.version;\n\n    return channel_1.Channel.fromPartial({\n      state: state,\n      ordering: ordering,\n      counterparty: counterparty ? counterparty.toProto() : undefined,\n      connectionHops: connection_hops,\n      version: version\n    });\n  };\n\n  return Channel;\n}(json_1.JSONSerializable);\n\nexports.Channel = Channel;","map":{"version":3,"mappings":"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","names":["__extends","state","ordering","counterparty","connection_hops","version","_super","_this","Channel","data","Counterparty_1","fromAmino","undefined","res","toAmino","fromData","toData","proto","fromProto","connectionHops","channel_1","fromPartial","toProto","json_1","exports"],"sources":["../../../../../src/core/ibc/msgs/channel/Channel.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}